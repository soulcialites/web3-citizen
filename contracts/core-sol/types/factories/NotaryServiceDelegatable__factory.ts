/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NotaryServiceDelegatable,
  NotaryServiceDelegatableInterface,
} from "../NotaryServiceDelegatable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_citizenAlpha_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "principal",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "agent",
        type: "address",
      },
    ],
    name: "DelegationTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "enforcer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "terms",
            type: "bytes",
          },
        ],
        internalType: "struct Caveat[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_CAVEAT_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "enforcer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "terms",
            type: "bytes",
          },
        ],
        internalType: "struct Caveat",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_CAVEAT_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "authority",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "enforcer",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "terms",
                type: "bytes",
              },
            ],
            internalType: "struct Caveat[]",
            name: "caveats",
            type: "tuple[]",
          },
        ],
        internalType: "struct Delegation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_DELEGATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "verifyingContract",
            type: "address",
          },
        ],
        internalType: "struct EIP712Domain",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_EIP712DOMAIN_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "delegationHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IntentionToRevoke",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INTENTIONTOREVOKE_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "gasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Transaction",
                name: "transaction",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "authority",
                        type: "bytes32",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "enforcer",
                            type: "address",
                          },
                          {
                            internalType: "bytes",
                            name: "terms",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct Caveat[]",
                        name: "caveats",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct Delegation",
                    name: "delegation",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct SignedDelegation[]",
                name: "authority",
                type: "tuple[]",
              },
            ],
            internalType: "struct Invocation[]",
            name: "batch",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queue",
                type: "uint256",
              },
            ],
            internalType: "struct ReplayProtection",
            name: "replayProtection",
            type: "tuple",
          },
        ],
        internalType: "struct Invocations",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INVOCATIONS_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_INVOCATION_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INVOCATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queue",
            type: "uint256",
          },
        ],
        internalType: "struct ReplayProtection",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_REPLAYPROTECTION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_SIGNEDDELEGATION_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDDELEGATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDINTENTIONTOREVOKE_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDINVOCATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Transaction",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_TRANSACTION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation[]",
        name: "batch",
        type: "tuple[]",
      },
    ],
    name: "contractInvoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "terms",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Transaction",
        name: "transaction",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "delegationHash",
        type: "bytes32",
      },
    ],
    name: "enforceCaveat",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "authority",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "enforcer",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "terms",
                type: "bytes",
              },
            ],
            internalType: "struct Caveat[]",
            name: "caveats",
            type: "tuple[]",
          },
        ],
        internalType: "struct Delegation",
        name: "delegation",
        type: "tuple",
      },
    ],
    name: "getDelegationTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractName",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
    ],
    name: "getEIP712DomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "delegationHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IntentionToRevoke",
        name: "intentionToRevoke",
        type: "tuple",
      },
    ],
    name: "getIntentionToRevokeTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "gasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Transaction",
                name: "transaction",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "authority",
                        type: "bytes32",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "enforcer",
                            type: "address",
                          },
                          {
                            internalType: "bytes",
                            name: "terms",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct Caveat[]",
                        name: "caveats",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct Delegation",
                    name: "delegation",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct SignedDelegation[]",
                name: "authority",
                type: "tuple[]",
              },
            ],
            internalType: "struct Invocation[]",
            name: "batch",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queue",
                type: "uint256",
              },
            ],
            internalType: "struct ReplayProtection",
            name: "replayProtection",
            type: "tuple",
          },
        ],
        internalType: "struct Invocations",
        name: "invocations",
        type: "tuple",
      },
    ],
    name: "getInvocationsTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNotary",
    outputs: [
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation[]",
        name: "signedInvocations",
        type: "tuple[]",
      },
    ],
    name: "invoke",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newCitizen",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "multiNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "signedDelegation",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "signedIntentionToRevoke",
        type: "tuple",
      },
    ],
    name: "revokeDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "signedDelegation",
        type: "tuple",
      },
    ],
    name: "verifyDelegationSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "signedIntentionToRevoke",
        type: "tuple",
      },
    ],
    name: "verifyIntentionToRevokeSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation",
        name: "signedInvocation",
        type: "tuple",
      },
    ],
    name: "verifyInvocationSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002904380380620029048339810160408190526200003491620001d4565b6040518060400160405280601881526020017f4e6f746172795365727669636544656c6567617461626c65000000000000000081525080604051806040016040528060018152602001603160f81b8152506200009f620000996200012660201b60201c565b62000184565b8151602080840191909120825182840120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818601528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c0909201905280519101206080525050506001600160a01b031660a05262000206565b60003033036200017e57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620001819050565b50335b90565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620001e757600080fd5b81516001600160a01b0381168114620001ff57600080fd5b9392505050565b60805160a0516126bc620002486000396000818161041a0152610b020152600081816105060152818161094d01528181610cb10152610dc701526126bc6000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637b577b581161010f578063a8444b3a116100a2578063d327c1eb11610071578063d327c1eb14610464578063d6d75cbf146104ee578063dfe86ac514610501578063f2fde38b1461052857600080fd5b8063a8444b3a14610405578063b91808b114610418578063bb5af5bd1461043e578063caced6c51461045157600080fd5b80638dc34c4d116100de5780638dc34c4d146103b957806397182ed6146103cc57806398bc186a146103df578063a2e01f75146103f257600080fd5b80637b577b5814610357578063870eea551461036a5780638a04499e1461037d5780638da5cb5b146103a857600080fd5b806360b6d7681161018757806371e928af1161015657806371e928af1461030b5780637234eefe1461031e578063732c36e814610331578063736f7ce71461034457600080fd5b806360b6d768146102c85780636c2b1253146102db5780636f965803146102ee578063715018a61461030157600080fd5b80633a481821116101c35780633a4818211461027c5780635068de4c1461028f5780635c6d9f0c146102a25780635cf1b24a146102b557600080fd5b80630162f722146101f557806308aaf6b0146102335780632f52a2fd146102465780632fad7efc14610259575b600080fd5b610220610203366004611788565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b61022061024136600461192b565b61053b565b610220610254366004611a73565b6105bb565b61026c610267366004611af2565b610626565b604051901515815260200161022a565b61022061028a366004611d4b565b6106ed565b61026c61029d366004611d7f565b610764565b61026c6102b0366004611af2565b6108d5565b6102206102c3366004611e1f565b6108eb565b6102206102d6366004611edc565b610948565b6102206102e9366004611f10565b610998565b6102206102fc366004611f44565b6109f5565b610309610a46565b005b610309610319366004611f60565b610a5a565b61022061032c366004611edc565b610b61565b61022061033f36600461200a565b610b9f565b61022061035236600461203e565b610bdc565b610220610365366004612072565b610c44565b6102206103783660046120a6565b610cac565b61039061038b366004611f10565b610cd9565b6040516001600160a01b03909116815260200161022a565b6000546001600160a01b0316610390565b6103096103c73660046120da565b610d03565b6102206103da366004611a73565b610dc2565b6102206103ed36600461213d565b610def565b6102206104003660046121e8565b610e3b565b61039061041336600461200a565b610ea7565b7f0000000000000000000000000000000000000000000000000000000000000000610390565b61022061044c36600461225b565b610ecb565b61039061045f36600461225b565b610efc565b61022061047236600461228f565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8188015280820195909552606085019190915260808401929092526001600160a01b031660a0808401919091528151808403909101815260c09092019052805191012090565b6102206104fc3660046120a6565b610f26565b6102207f000000000000000000000000000000000000000000000000000000000000000081565b610309610536366004611f60565b610f67565b6000807f80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d836000015184602001518051906020012060405160200161059c939291909283526001600160a01b03919091166020830152604082015260600190565b60408051601f1981840301815291905280516020909101209392505050565b6000807f409f5114779a253e700d775d7845e6efc1e83685ac59868d2df3d4de51c7d621836000015184602001516105f68660400151610c44565b6040805160208101959095526001600160a01b03909316928401929092526060830152608082015260a00161059c565b6000805b828110156106e657368484838181106106455761064561230c565b90506020028101906106579190612322565b9050600061066761045f83612342565b90506106b38187878681811061067f5761067f61230c565b90506020028101906106919190612322565b61069b908061234e565b6020018036038101906106ae9190611f44565b610fe0565b6106d06106c0838061234e565b6106ca9080612364565b836110aa565b50505080806106de906123c3565b91505061062a565b5092915050565b6000606060005b835181101561075557816107208583815181106107135761071361230c565b60200260200101516108eb565b60405160200161073192919061240c565b6040516020818303038152906040529150808061074d906123c3565b9150506106f4565b50805160209091012092915050565b60008181526002602052604081205460ff16156107c85760405162461bcd60e51b815260206004820152601b60248201527f44656c65676174696f6e20686173206265656e207265766f6b6564000000000060448201526064015b60405180910390fd5b60006107d7604085018561242e565b6107e691600491600091612474565b6107ef9161249e565b90506001600160e01b0319811663f2fde38b60e01b0361085d5760405162461bcd60e51b8152602060048201526024808201527f7472616e736665724f776e657273686970206973206e6f742064656c6567617460448201526361626c6560e01b60648201526084016107bf565b6001600160e01b03198116630f374f3b60e31b036108c95760405162461bcd60e51b8152602060048201526024808201527f72656e6f756e63654f776e657273686970206973206e6f742064656c6567617460448201526361626c6560e01b60648201526084016107bf565b50600195945050505050565b60006108e28383336110aa565b90505b92915050565b6000807fd97dd99b404d177890f06a8f0fc8e5ed0333fb2ebb6684360709066e8984f59461091c8460000151610e3b565b6109298560200151610bdc565b604080516020810194909452830191909152606082015260800161059c565b6000807f000000000000000000000000000000000000000000000000000000000000000061097584610b61565b60405161190160f01b60208201526022810192909252604282015260620161059c565b6000807f3c36a06e1d288b0f94f565588317a46ad11bc3c96992109f9a2365a2737259a76109c984600001516105bb565b60208086015180519082012060405161059c949392019283526020830191909152604082015260600190565b6000807fe8d3d963b33868fb116316bc3fd55e8f49123f30e4418f71e140d54b7cd3b2b98360000151846020015160405160200161059c939291909283526020830191909152604082015260600190565b610a4e611531565b610a5860006115aa565b565b610a626115fa565b6001600160a01b0316610a7d6000546001600160a01b031690565b6001600160a01b031614610ae35760405162461bcd60e51b815260206004820152602760248201527f4e6f746172795365727669636544656c6567617461626c653a6e6f742d6175746044820152661a1bdc9a5e995960ca1b60648201526084016107bf565b6040516371e928af60e01b81526001600160a01b0382811660048301527f000000000000000000000000000000000000000000000000000000000000000016906371e928af90602401600060405180830381600087803b158015610b4657600080fd5b505af1158015610b5a573d6000803e3d6000fd5b5050505050565b6000807f08c69a206c06f5334b35ceb1186181a713b21aff02cf66285f375084fbef2eb8610b9284600001516106ed565b61092985602001516109f5565b6000807f1b0091a1d050ac3fa97e15af326cf512d740529b43d5750169acacda23de27888360000151805190602001206109298560200151610f26565b6000606060005b83518110156107555781610c0f858381518110610c0257610c0261230c565b6020026020010151610998565b604051602001610c2092919061240c565b60405160208183030381529060405291508080610c3c906123c3565b915050610be3565b6000606060005b83518110156107555781610c77858381518110610c6a57610c6a61230c565b602002602001015161053b565b604051602001610c8892919061240c565b60405160208183030381529060405291508080610ca4906123c3565b915050610c4b565b6000807f000000000000000000000000000000000000000000000000000000000000000061097584610f26565b805160009081610ce882610dc2565b90506000610cfa828660200151611656565b95945050505050565b6000610d1161038b846124ce565b90506000610d21610413846124da565b9050806001600160a01b0316826001600160a01b031614610d945760405162461bcd60e51b815260206004820152602760248201527f4f6e6c7920746865207369676e65722063616e207265766f6b6520612064656c60448201526632b3b0ba34b7b760c91b60648201526084016107bf565b6000610da26102e9866124ce565b6000908152600260205260409020805460ff191660011790555050505050565b6000807f0000000000000000000000000000000000000000000000000000000000000000610975846105bb565b6000807f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f836000015184602001518560400151866060015160405160200161059c959493929190612512565b6000807fb16dfdb3b8fa033fe30ac976cd4a50ad256b6811c80d90fcd0b323eec190047d8360000151846020015185604001518051906020012060405160200161059c94939291909384526001600160a01b039290921660208401526040830152606082015260800190565b602081015160009081610eb982610cac565b90506000610cfa828660000151611656565b6000807fc32b6dfe0f988d1f2b13248cddd88e320ff0ae86e3ccfe38bab77a80f4477d446109c98460000151610b61565b600080610f0c8360000151610948565b90506000610f1e828560200151611656565b949350505050565b8051604051600091829161059c917f7148a5140265154d6c5200f68c3b86caca80512f179c3903dffd45aeaefc8ea891602001918252602082015260400190565b610f6f611531565b6001600160a01b038116610fd45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107bf565b610fdd816115aa565b50565b60208082015182516001600160a01b038516600090815260018085526040808320858452909552939020549192909161101891612560565b81146110805760405162461bcd60e51b815260206004820152603160248201527f4f6e652d61742d612d74696d65206f7264657220656e666f726365642e204e6f6044820152701b98d94c881a5cc81d1bdbc81cdb585b1b607a1b60648201526084016107bf565b6001600160a01b039093166000908152600160209081526040808320938352929052209190915550565b6000805b838110156115295760008585838181106110ca576110ca61230c565b90506020028101906110dc9190612322565b6110e590612578565b90506000808260200151516000036110fd5750849050805b6000805b84602001515181101561140e576000856020015182815181106111265761112661230c565b60200260200101519050600061113b82610cd9565b9050806001600160a01b03168a6001600160a01b0316148061116e5750806001600160a01b0316866001600160a01b0316145b6111ae5760405162461bcd60e51b8152602060048201526011602482015270696e76616c69642d7369676e617475726560781b60448201526064016107bf565b826000036111bd578095508594505b846001600160a01b0316816001600160a01b0316146112375760405162461bcd60e51b815260206004820152603060248201527f44656c65676174696f6e207369676e657220646f6573206e6f74206d6174636860448201526f103932b8bab4b932b21039b4b3b732b960811b60648201526084016107bf565b8151602081015185146112b25760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e20617574686f7269747920646f6573206e6f74206d6160448201527f7463682070726576696f75732064656c65676174696f6e00000000000000000060648201526084016107bf565b60006112bd84610998565b905060005b8260400151518161ffff1610156113f157600083604001518261ffff16815181106112ef576112ef61230c565b60200260200101516000015190506000816001600160a01b0316635068de4c86604001518561ffff16815181106113285761132861230c565b6020026020010151602001518e60000151876040518463ffffffff1660e01b815260040161135893929190612584565b6020604051808303816000875af1158015611377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061139b91906125e0565b9050806113dc5760405162461bcd60e51b815260206004820152600f60248201526e10d85d99585d081c995a9958dd1959608a1b60448201526064016107bf565b505080806113e990612609565b9150506112c2565b509051955093508291506114069050816123c3565b915050611101565b50835180516001600160a01b0316301461146a5760405162461bcd60e51b815260206004820181905260248201527f496e766f636174696f6e2074617267657420646f6573206e6f74206d6174636860448201526064016107bf565b6040516001600160a01b0385811682528916907f185d11175440fcb6458fbc1889b02953452539ed80ad1da781a5449500f6d9609060200160405180910390a26114c28160000151826040015183602001518761172d565b9650866115115760405162461bcd60e51b815260206004820152601a60248201527f44656c656761746f7220657865637574696f6e206661696c656400000000000060448201526064016107bf565b50505050508080611521906123c3565b9150506110ae565b509392505050565b6115396115fa565b6001600160a01b03166115546000546001600160a01b031690565b6001600160a01b031614610a585760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107bf565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600030330361165057600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506116539050565b50335b90565b600080600080845160411461167157600093505050506108e5565b50505060208201516040830151606084015160001a601b81101561169d5761169a601b8261262a565b90505b8060ff16601b141580156116b557508060ff16601c14155b156116c657600093505050506108e5565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015611719573d6000803e3d6000fd5b5050506020604051035193505050506108e5565b600080848360405160200161174392919061264f565b604051602081830303815290604052905060008082516020840160008a89f19695505050505050565b80356001600160a01b038116811461178357600080fd5b919050565b6000806040838503121561179b57600080fd5b6117a48361176c565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b03811182821017156117ea576117ea6117b2565b60405290565b604051606081016001600160401b03811182821017156117ea576117ea6117b2565b604051608081016001600160401b03811182821017156117ea576117ea6117b2565b604051601f8201601f191681016001600160401b038111828210171561185c5761185c6117b2565b604052919050565b600082601f83011261187557600080fd5b81356001600160401b0381111561188e5761188e6117b2565b6118a1601f8201601f1916602001611834565b8181528460208386010111156118b657600080fd5b816020850160208301376000918101602001919091529392505050565b6000604082840312156118e557600080fd5b6118ed6117c8565b90506118f88261176c565b815260208201356001600160401b0381111561191357600080fd5b61191f84828501611864565b60208301525092915050565b60006020828403121561193d57600080fd5b81356001600160401b0381111561195357600080fd5b610f1e848285016118d3565b60006001600160401b03821115611978576119786117b2565b5060051b60200190565b600082601f83011261199357600080fd5b813560206119a86119a38361195f565b611834565b82815260059290921b840181019181810190868411156119c757600080fd5b8286015b84811015611a065780356001600160401b038111156119ea5760008081fd5b6119f88986838b01016118d3565b8452509183019183016119cb565b509695505050505050565b600060608284031215611a2357600080fd5b611a2b6117f0565b9050611a368261176c565b81526020820135602082015260408201356001600160401b03811115611a5b57600080fd5b611a6784828501611982565b60408301525092915050565b600060208284031215611a8557600080fd5b81356001600160401b03811115611a9b57600080fd5b610f1e84828501611a11565b60008083601f840112611ab957600080fd5b5081356001600160401b03811115611ad057600080fd5b6020830191508360208260051b8501011115611aeb57600080fd5b9250929050565b60008060208385031215611b0557600080fd5b82356001600160401b03811115611b1b57600080fd5b611b2785828601611aa7565b90969095509350505050565b600060608284031215611b4557600080fd5b611b4d6117f0565b9050611b588261176c565b81526020820135602082015260408201356001600160401b03811115611b7d57600080fd5b611a6784828501611864565b600060408284031215611b9b57600080fd5b611ba36117c8565b905081356001600160401b0380821115611bbc57600080fd5b611bc885838601611a11565b83526020840135915080821115611bde57600080fd5b5061191f84828501611864565b600082601f830112611bfc57600080fd5b81356020611c0c6119a38361195f565b82815260059290921b84018101918181019086841115611c2b57600080fd5b8286015b84811015611a065780356001600160401b03811115611c4e5760008081fd5b611c5c8986838b0101611b89565b845250918301918301611c2f565b600060408284031215611c7c57600080fd5b611c846117c8565b905081356001600160401b0380821115611c9d57600080fd5b611ca985838601611b33565b83526020840135915080821115611cbf57600080fd5b5061191f84828501611beb565b600082601f830112611cdd57600080fd5b81356020611ced6119a38361195f565b82815260059290921b84018101918181019086841115611d0c57600080fd5b8286015b84811015611a065780356001600160401b03811115611d2f5760008081fd5b611d3d8986838b0101611c6a565b845250918301918301611d10565b600060208284031215611d5d57600080fd5b81356001600160401b03811115611d7357600080fd5b610f1e84828501611ccc565b60008060008060608587031215611d9557600080fd5b84356001600160401b0380821115611dac57600080fd5b818701915087601f830112611dc057600080fd5b813581811115611dcf57600080fd5b886020828501011115611de157600080fd5b602092830196509450908601359080821115611dfc57600080fd5b50850160608188031215611e0f57600080fd5b9396929550929360400135925050565b600060208284031215611e3157600080fd5b81356001600160401b03811115611e4757600080fd5b610f1e84828501611c6a565b600060408284031215611e6557600080fd5b611e6d6117c8565b9050813581526020820135602082015292915050565b600060608284031215611e9557600080fd5b611e9d6117c8565b905081356001600160401b03811115611eb557600080fd5b611ec184828501611ccc565b825250611ed18360208401611e53565b602082015292915050565b600060208284031215611eee57600080fd5b81356001600160401b03811115611f0457600080fd5b610f1e84828501611e83565b600060208284031215611f2257600080fd5b81356001600160401b03811115611f3857600080fd5b610f1e84828501611b89565b600060408284031215611f5657600080fd5b6108e28383611e53565b600060208284031215611f7257600080fd5b6108e28261176c565b600060208284031215611f8d57600080fd5b604051602081018181106001600160401b0382111715611faf57611faf6117b2565b6040529135825250919050565b600060408284031215611fce57600080fd5b611fd66117c8565b905081356001600160401b03811115611fee57600080fd5b611ffa84828501611864565b825250611ed18360208401611f7b565b60006020828403121561201c57600080fd5b81356001600160401b0381111561203257600080fd5b610f1e84828501611fbc565b60006020828403121561205057600080fd5b81356001600160401b0381111561206657600080fd5b610f1e84828501611beb565b60006020828403121561208457600080fd5b81356001600160401b0381111561209a57600080fd5b610f1e84828501611982565b6000602082840312156120b857600080fd5b6108e28383611f7b565b6000604082840312156120d457600080fd5b50919050565b600080604083850312156120ed57600080fd5b82356001600160401b038082111561210457600080fd5b612110868387016120c2565b9350602085013591508082111561212657600080fd5b50612133858286016120c2565b9150509250929050565b60006020828403121561214f57600080fd5b81356001600160401b038082111561216657600080fd5b908301906080828603121561217a57600080fd5b612182611812565b82358281111561219157600080fd5b61219d87828601611864565b8252506020830135828111156121b257600080fd5b6121be87828601611864565b602083015250604083013560408201526121da6060840161176c565b606082015295945050505050565b6000602082840312156121fa57600080fd5b81356001600160401b0381111561221057600080fd5b610f1e84828501611b33565b60006040828403121561222e57600080fd5b6122366117c8565b905081356001600160401b038082111561224f57600080fd5b611bc885838601611e83565b60006020828403121561226d57600080fd5b81356001600160401b0381111561228357600080fd5b610f1e8482850161221c565b600080600080608085870312156122a557600080fd5b84356001600160401b03808211156122bc57600080fd5b6122c888838901611864565b955060208701359150808211156122de57600080fd5b506122eb87828801611864565b935050604085013591506123016060860161176c565b905092959194509250565b634e487b7160e01b600052603260045260246000fd5b60008235603e1983360301811261233857600080fd5b9190910192915050565b60006108e5368361221c565b60008235605e1983360301811261233857600080fd5b6000808335601e1984360301811261237b57600080fd5b8301803591506001600160401b0382111561239557600080fd5b6020019150600581901b3603821315611aeb57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016123d5576123d56123ad565b5060010190565b60005b838110156123f75781810151838201526020016123df565b83811115612406576000848401525b50505050565b6000835161241e8184602088016123dc565b9190910191825250602001919050565b6000808335601e1984360301811261244557600080fd5b8301803591506001600160401b0382111561245f57600080fd5b602001915036819003821315611aeb57600080fd5b6000808585111561248457600080fd5b8386111561249157600080fd5b5050820193919092039150565b6001600160e01b031981358181169160048510156124c65780818660040360031b1b83161692505b505092915050565b60006108e53683611b89565b60006108e53683611fbc565b600081518084526124fe8160208601602086016123dc565b601f01601f19169290920160200192915050565b85815260a06020820152600061252b60a08301876124e6565b828103604084015261253d81876124e6565b606084019590955250506001600160a01b03919091166080909101529392505050565b60008219821115612573576125736123ad565b500190565b60006108e53683611c6a565b60608152600061259760608301866124e6565b828103602084015260018060a01b038551168152602085015160208201526040850151606060408301526125ce60608301826124e6565b92505050826040830152949350505050565b6000602082840312156125f257600080fd5b8151801515811461260257600080fd5b9392505050565b600061ffff808316818103612620576126206123ad565b6001019392505050565b600060ff821660ff84168060ff03821115612647576126476123ad565b019392505050565b600083516126618184602088016123dc565b60609390931b6bffffffffffffffffffffffff1916919092019081526014019291505056fea2646970667358221220811726d5cc7c5e8b9f3bd4e6cf4ad48deee4e88d0d107dd5d5a247f0255a708264736f6c634300080f0033";

type NotaryServiceDelegatableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NotaryServiceDelegatableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NotaryServiceDelegatable__factory extends ContractFactory {
  constructor(...args: NotaryServiceDelegatableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "NotaryServiceDelegatable";
  }

  deploy(
    _citizenAlpha_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NotaryServiceDelegatable> {
    return super.deploy(
      _citizenAlpha_,
      overrides || {}
    ) as Promise<NotaryServiceDelegatable>;
  }
  getDeployTransaction(
    _citizenAlpha_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_citizenAlpha_, overrides || {});
  }
  attach(address: string): NotaryServiceDelegatable {
    return super.attach(address) as NotaryServiceDelegatable;
  }
  connect(signer: Signer): NotaryServiceDelegatable__factory {
    return super.connect(signer) as NotaryServiceDelegatable__factory;
  }
  static readonly contractName: "NotaryServiceDelegatable";
  public readonly contractName: "NotaryServiceDelegatable";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NotaryServiceDelegatableInterface {
    return new utils.Interface(_abi) as NotaryServiceDelegatableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NotaryServiceDelegatable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NotaryServiceDelegatable;
  }
}
