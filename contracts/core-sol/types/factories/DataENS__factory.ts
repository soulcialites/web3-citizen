/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DataENS, DataENSInterface } from "../DataENS";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "values",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "string",
        name: "_key",
        type: "string",
      },
    ],
    name: "getTextField",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001d336200024c565b60018054808201825560009190915260408051808201909152600681526530bb30ba30b960d11b60208201526000805160206200121b8339815191529091019062000069908262000341565b506001805480820182556000919091526040805180820190915260038152621d5c9b60ea1b60208201526000805160206200121b83398151915290910190620000b3908262000341565b5060018054808201825560009190915260408051808201909152600b81526a3232b9b1b934b83a34b7b760a91b60208201526000805160206200121b8339815191529091019062000105908262000341565b5060018054808201825560009190915260408051808201909152600a81526931b7b69733b4ba343ab160b11b60208201526000805160206200121b8339815191529091019062000156908262000341565b5060018054808201825560009190915260408051808201909152600b81526a31b7b6973a3bb4ba3a32b960a91b60208201526000805160206200121b83398151915290910190620001a8908262000341565b5060018054808201825560009190915260408051808201909152600c81526b6f72672e74656c656772616d60a01b60208201526000805160206200121b83398151915290910190620001fb908262000341565b50600180548082018255600091909152604080518082019091526003815262191a5960ea1b60208201526000805160206200121b8339815191529091019062000245908262000341565b506200040d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620002c757607f821691505b602082108103620002e857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033c57600081815260208120601f850160051c81016020861015620003175750805b601f850160051c820191505b81811015620003385782815560010162000323565b5050505b505050565b81516001600160401b038111156200035d576200035d6200029c565b62000375816200036e8454620002b2565b84620002ee565b602080601f831160018114620003ad5760008415620003945750858301515b600019600386901b1c1916600185901b17855562000338565b600085815260208120601f198616915b82811015620003de57888601518255948401946001909101908401620003bd565b5085821015620003fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610dfe806200041d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80636ccffc1a1161005b5780636ccffc1a146100eb578063715018a61461010b5780638da5cb5b14610115578063f2fde38b1461013057600080fd5b806305d85eda146100825780632a50c146146100a857806338266b22146100ca575b600080fd5b610095610090366004610a4a565b610143565b6040519081526020015b60405180910390f35b6100bb6100b6366004610a4a565b610244565b60405161009f93929190610ac8565b6100dd6100d8366004610a4a565b610266565b60405161009f929190610b51565b6100fe6100f9366004610be5565b610360565b60405161009f9190610c76565b6101136103f0565b005b6000546040516001600160a01b03909116815260200161009f565b61011361013e366004610a4a565b610404565b60008060008061015285610482565b9250925092506000806102376001805480602002602001604051908101604052809291908181526020016000905b8282101561022c57838290600052602060002001805461019f90610c89565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610c89565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b505050505081526020019060010190610180565b5050505085856105b8565b5051979650505050505050565b6000606060008060008061025787610482565b90999198509650945050505050565b606080600080600061027786610482565b9250925092506000806103516001805480602002602001604051908101604052809291908181526020016000905b8282101561022c5783829060005260206000200180546102c490610c89565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610c89565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050815260200190600101906102a5565b90999098509650505050505050565b606060008061036e85610482565b604051631674750f60e21b815291945092506001600160a01b03831691506359d1d43c906103a29085908890600401610cc3565b600060405180830381865afa1580156103bf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103e79190810190610ce4565b95945050505050565b6103f861076b565b61040260006107c5565b565b61040c61076b565b6001600160a01b0381166104765760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61047f816107c5565b50565b604051632ffef98760e21b81526001600160a01b03821660048201526060906000908190819073084b1c3c81545d370f3634392de611caabff81489063bffbe61c90602401602060405180830381865afa1580156104e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105089190610d52565b60405163691f343160e01b81526004810182905290915060009073a2c122be93b0074270ebee7f6b7292c7deb450479063691f343190602401600060405180830381865afa15801561055e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105869190810190610ce4565b9050600061059382610815565b9298929750734976fb03c32e5b8cfe2b6ccb31c09ba78ebaba41965091945050505050565b6060806000855167ffffffffffffffff8111156105d7576105d7610b76565b60405190808252806020026020018201604052801561060a57816020015b60608152602001906001900390816105f55790505b5090506000865167ffffffffffffffff81111561062957610629610b76565b60405190808252806020026020018201604052801561065c57816020015b60608152602001906001900390816106475790505b50905060005b875181101561075e5787818151811061067d5761067d610d6b565b602002602001015183828151811061069757610697610d6b565b6020026020010181905250856001600160a01b03166359d1d43c888a84815181106106c4576106c4610d6b565b60200260200101516040518363ffffffff1660e01b81526004016106e9929190610cc3565b600060405180830381865afa158015610706573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261072e9190810190610ce4565b82828151811061074057610740610d6b565b6020026020010181905250808061075690610d97565b915050610662565b5090969095509350505050565b6000546001600160a01b031633146104025760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161046d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516060906000908190849061082c816002610db0565b67ffffffffffffffff81111561084457610844610b76565b6040519080825280601f01601f19166020018201604052801561086e576020820181803683370190505b509450600093508084036108b357600060f81b8560008151811061089457610894610d6b565b60200101906001600160f81b031916908160001a905350505050915091565b60001981015b8281815181106108cb576108cb610d6b565b01602001516001600160f81b031916601760f91b03610959578360f81b8682600101815181106108fd576108fd610d6b565b60200101906001600160f81b031916908160001a90535084610926846001840160ff8816610a0a565b604080516020810193909352820152606001604051602081830303815290604052805190602001209450600093506109a9565b60018401935082818151811061097157610971610d6b565b602001015160f81c60f81b86826001018151811061099157610991610d6b565b60200101906001600160f81b031916908160001a9053505b80156109b857600019016108b9565b50836109c983600060ff8716610a0a565b6040805160208101939093528201526060016040516020818303038152906040528051906020012093508260f81b8560008151811061089457610894610d6b565b8251600090610a198385610db0565b1115610a2457600080fd5b5091016020012090565b80356001600160a01b0381168114610a4557600080fd5b919050565b600060208284031215610a5c57600080fd5b610a6582610a2e565b9392505050565b60005b83811015610a87578181015183820152602001610a6f565b83811115610a96576000848401525b50505050565b60008151808452610ab4816020860160208601610a6c565b601f01601f19169290920160200192915050565b838152606060208201526000610ae16060830185610a9c565b905060018060a01b0383166040830152949350505050565b600082825180855260208086019550808260051b84010181860160005b84811015610b4457601f19868403018952610b32838351610a9c565b98840198925090830190600101610b16565b5090979650505050505050565b604081526000610b646040830185610af9565b82810360208401526103e78185610af9565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610bb557610bb5610b76565b604052919050565b600067ffffffffffffffff821115610bd757610bd7610b76565b50601f01601f191660200190565b60008060408385031215610bf857600080fd5b610c0183610a2e565b9150602083013567ffffffffffffffff811115610c1d57600080fd5b8301601f81018513610c2e57600080fd5b8035610c41610c3c82610bbd565b610b8c565b818152866020838501011115610c5657600080fd5b816020840160208301376000602083830101528093505050509250929050565b602081526000610a656020830184610a9c565b600181811c90821680610c9d57607f821691505b602082108103610cbd57634e487b7160e01b600052602260045260246000fd5b50919050565b828152604060208201526000610cdc6040830184610a9c565b949350505050565b600060208284031215610cf657600080fd5b815167ffffffffffffffff811115610d0d57600080fd5b8201601f81018413610d1e57600080fd5b8051610d2c610c3c82610bbd565b818152856020838501011115610d4157600080fd5b6103e7826020830160208601610a6c565b600060208284031215610d6457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610da957610da9610d81565b5060010190565b60008219821115610dc357610dc3610d81565b50019056fea264697066735822122064487da07a6cab0a076f0c0c8c8e369af0bcad838c1208e0097d175b96664cf564736f6c634300080f0033b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6";

type DataENSConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DataENSConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DataENS__factory extends ContractFactory {
  constructor(...args: DataENSConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DataENS";
  }

  deploy(overrides?: Overrides & { from?: string | Promise<string> }): Promise<DataENS> {
    return super.deploy(overrides || {}) as Promise<DataENS>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DataENS {
    return super.attach(address) as DataENS;
  }
  connect(signer: Signer): DataENS__factory {
    return super.connect(signer) as DataENS__factory;
  }
  static readonly contractName: "DataENS";
  public readonly contractName: "DataENS";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DataENSInterface {
    return new utils.Interface(_abi) as DataENSInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DataENS {
    return new Contract(address, _abi, signerOrProvider) as DataENS;
  }
}
