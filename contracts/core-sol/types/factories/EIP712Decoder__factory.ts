/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { EIP712Decoder, EIP712DecoderInterface } from "../EIP712Decoder";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "enforcer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "terms",
            type: "bytes",
          },
        ],
        internalType: "struct Caveat[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_CAVEAT_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "enforcer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "terms",
            type: "bytes",
          },
        ],
        internalType: "struct Caveat",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_CAVEAT_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "authority",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "enforcer",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "terms",
                type: "bytes",
              },
            ],
            internalType: "struct Caveat[]",
            name: "caveats",
            type: "tuple[]",
          },
        ],
        internalType: "struct Delegation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_DELEGATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "verifyingContract",
            type: "address",
          },
        ],
        internalType: "struct EIP712Domain",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_EIP712DOMAIN_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "delegationHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IntentionToRevoke",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INTENTIONTOREVOKE_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "gasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Transaction",
                name: "transaction",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "authority",
                        type: "bytes32",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "enforcer",
                            type: "address",
                          },
                          {
                            internalType: "bytes",
                            name: "terms",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct Caveat[]",
                        name: "caveats",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct Delegation",
                    name: "delegation",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct SignedDelegation[]",
                name: "authority",
                type: "tuple[]",
              },
            ],
            internalType: "struct Invocation[]",
            name: "batch",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queue",
                type: "uint256",
              },
            ],
            internalType: "struct ReplayProtection",
            name: "replayProtection",
            type: "tuple",
          },
        ],
        internalType: "struct Invocations",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INVOCATIONS_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_INVOCATION_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INVOCATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queue",
            type: "uint256",
          },
        ],
        internalType: "struct ReplayProtection",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_REPLAYPROTECTION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_SIGNEDDELEGATION_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDDELEGATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDINTENTIONTOREVOKE_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDINVOCATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Transaction",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_TRANSACTION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "";

type EIP712DecoderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EIP712DecoderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EIP712Decoder__factory extends ContractFactory {
  constructor(...args: EIP712DecoderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "EIP712Decoder";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<EIP712Decoder> {
    return super.deploy(overrides || {}) as Promise<EIP712Decoder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): EIP712Decoder {
    return super.attach(address) as EIP712Decoder;
  }
  connect(signer: Signer): EIP712Decoder__factory {
    return super.connect(signer) as EIP712Decoder__factory;
  }
  static readonly contractName: "EIP712Decoder";
  public readonly contractName: "EIP712Decoder";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EIP712DecoderInterface {
    return new utils.Interface(_abi) as EIP712DecoderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EIP712Decoder {
    return new Contract(address, _abi, signerOrProvider) as EIP712Decoder;
  }
}
