/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DelegatableNotary, DelegatableNotaryInterface } from "../DelegatableNotary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_notary_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "principal",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "agent",
        type: "address",
      },
    ],
    name: "DelegationTriggered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "enforcer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "terms",
            type: "bytes",
          },
        ],
        internalType: "struct Caveat[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_CAVEAT_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "enforcer",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "terms",
            type: "bytes",
          },
        ],
        internalType: "struct Caveat",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_CAVEAT_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "authority",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "enforcer",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "terms",
                type: "bytes",
              },
            ],
            internalType: "struct Caveat[]",
            name: "caveats",
            type: "tuple[]",
          },
        ],
        internalType: "struct Delegation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_DELEGATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "version",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "chainId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "verifyingContract",
            type: "address",
          },
        ],
        internalType: "struct EIP712Domain",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_EIP712DOMAIN_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "delegationHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IntentionToRevoke",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INTENTIONTOREVOKE_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "gasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Transaction",
                name: "transaction",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "authority",
                        type: "bytes32",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "enforcer",
                            type: "address",
                          },
                          {
                            internalType: "bytes",
                            name: "terms",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct Caveat[]",
                        name: "caveats",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct Delegation",
                    name: "delegation",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct SignedDelegation[]",
                name: "authority",
                type: "tuple[]",
              },
            ],
            internalType: "struct Invocation[]",
            name: "batch",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queue",
                type: "uint256",
              },
            ],
            internalType: "struct ReplayProtection",
            name: "replayProtection",
            type: "tuple",
          },
        ],
        internalType: "struct Invocations",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INVOCATIONS_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_INVOCATION_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_INVOCATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "queue",
            type: "uint256",
          },
        ],
        internalType: "struct ReplayProtection",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_REPLAYPROTECTION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation[]",
        name: "_input",
        type: "tuple[]",
      },
    ],
    name: "GET_SIGNEDDELEGATION_ARRAY_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDDELEGATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDINTENTIONTOREVOKE_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_SIGNEDINVOCATION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Transaction",
        name: "_input",
        type: "tuple",
      },
    ],
    name: "GET_TRANSACTION_PACKETHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "gasLimit",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
            ],
            internalType: "struct Transaction",
            name: "transaction",
            type: "tuple",
          },
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "delegate",
                    type: "address",
                  },
                  {
                    internalType: "bytes32",
                    name: "authority",
                    type: "bytes32",
                  },
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "enforcer",
                        type: "address",
                      },
                      {
                        internalType: "bytes",
                        name: "terms",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Caveat[]",
                    name: "caveats",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Delegation",
                name: "delegation",
                type: "tuple",
              },
              {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
              },
            ],
            internalType: "struct SignedDelegation[]",
            name: "authority",
            type: "tuple[]",
          },
        ],
        internalType: "struct Invocation[]",
        name: "batch",
        type: "tuple[]",
      },
    ],
    name: "contractInvoke",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "domainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "terms",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "gasLimit",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Transaction",
        name: "transaction",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "delegationHash",
        type: "bytes32",
      },
    ],
    name: "enforceCaveat",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "delegate",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "authority",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "enforcer",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "terms",
                type: "bytes",
              },
            ],
            internalType: "struct Caveat[]",
            name: "caveats",
            type: "tuple[]",
          },
        ],
        internalType: "struct Delegation",
        name: "delegation",
        type: "tuple",
      },
    ],
    name: "getDelegationTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "contractName",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
    ],
    name: "getEIP712DomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "delegationHash",
            type: "bytes32",
          },
        ],
        internalType: "struct IntentionToRevoke",
        name: "intentionToRevoke",
        type: "tuple",
      },
    ],
    name: "getIntentionToRevokeTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    internalType: "address",
                    name: "to",
                    type: "address",
                  },
                  {
                    internalType: "uint256",
                    name: "gasLimit",
                    type: "uint256",
                  },
                  {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes",
                  },
                ],
                internalType: "struct Transaction",
                name: "transaction",
                type: "tuple",
              },
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "delegate",
                        type: "address",
                      },
                      {
                        internalType: "bytes32",
                        name: "authority",
                        type: "bytes32",
                      },
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "enforcer",
                            type: "address",
                          },
                          {
                            internalType: "bytes",
                            name: "terms",
                            type: "bytes",
                          },
                        ],
                        internalType: "struct Caveat[]",
                        name: "caveats",
                        type: "tuple[]",
                      },
                    ],
                    internalType: "struct Delegation",
                    name: "delegation",
                    type: "tuple",
                  },
                  {
                    internalType: "bytes",
                    name: "signature",
                    type: "bytes",
                  },
                ],
                internalType: "struct SignedDelegation[]",
                name: "authority",
                type: "tuple[]",
              },
            ],
            internalType: "struct Invocation[]",
            name: "batch",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "queue",
                type: "uint256",
              },
            ],
            internalType: "struct ReplayProtection",
            name: "replayProtection",
            type: "tuple",
          },
        ],
        internalType: "struct Invocations",
        name: "invocations",
        type: "tuple",
      },
    ],
    name: "getInvocationsTypedDataHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNotary",
    outputs: [
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation[]",
        name: "signedInvocations",
        type: "tuple[]",
      },
    ],
    name: "invoke",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "multiNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "signedDelegation",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "signedIntentionToRevoke",
        type: "tuple",
      },
    ],
    name: "revokeDelegation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "delegate",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "authority",
                type: "bytes32",
              },
              {
                components: [
                  {
                    internalType: "address",
                    name: "enforcer",
                    type: "address",
                  },
                  {
                    internalType: "bytes",
                    name: "terms",
                    type: "bytes",
                  },
                ],
                internalType: "struct Caveat[]",
                name: "caveats",
                type: "tuple[]",
              },
            ],
            internalType: "struct Delegation",
            name: "delegation",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedDelegation",
        name: "signedDelegation",
        type: "tuple",
      },
    ],
    name: "verifyDelegationSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "delegationHash",
                type: "bytes32",
              },
            ],
            internalType: "struct IntentionToRevoke",
            name: "intentionToRevoke",
            type: "tuple",
          },
        ],
        internalType: "struct SignedIntentionToRevoke",
        name: "signedIntentionToRevoke",
        type: "tuple",
      },
    ],
    name: "verifyIntentionToRevokeSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                components: [
                  {
                    components: [
                      {
                        internalType: "address",
                        name: "to",
                        type: "address",
                      },
                      {
                        internalType: "uint256",
                        name: "gasLimit",
                        type: "uint256",
                      },
                      {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct Transaction",
                    name: "transaction",
                    type: "tuple",
                  },
                  {
                    components: [
                      {
                        components: [
                          {
                            internalType: "address",
                            name: "delegate",
                            type: "address",
                          },
                          {
                            internalType: "bytes32",
                            name: "authority",
                            type: "bytes32",
                          },
                          {
                            components: [
                              {
                                internalType: "address",
                                name: "enforcer",
                                type: "address",
                              },
                              {
                                internalType: "bytes",
                                name: "terms",
                                type: "bytes",
                              },
                            ],
                            internalType: "struct Caveat[]",
                            name: "caveats",
                            type: "tuple[]",
                          },
                        ],
                        internalType: "struct Delegation",
                        name: "delegation",
                        type: "tuple",
                      },
                      {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes",
                      },
                    ],
                    internalType: "struct SignedDelegation[]",
                    name: "authority",
                    type: "tuple[]",
                  },
                ],
                internalType: "struct Invocation[]",
                name: "batch",
                type: "tuple[]",
              },
              {
                components: [
                  {
                    internalType: "uint256",
                    name: "nonce",
                    type: "uint256",
                  },
                  {
                    internalType: "uint256",
                    name: "queue",
                    type: "uint256",
                  },
                ],
                internalType: "struct ReplayProtection",
                name: "replayProtection",
                type: "tuple",
              },
            ],
            internalType: "struct Invocations",
            name: "invocations",
            type: "tuple",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct SignedInvocation",
        name: "signedInvocation",
        type: "tuple",
      },
    ],
    name: "verifyInvocationSignature",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620028ae380380620028ae8339810160408190526200003491620001c7565b6040518060400160405280601081526020016f4549503434333050726f746f7479706560801b81525080604051806040016040528060018152602001603160f81b815250620000926200008c6200011960201b60201c565b62000177565b8151602080840191909120825182840120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818601528082019390935260608301919091524660808301523060a0808401919091528151808403909101815260c0909201905280519101206080525050506001600160a01b031660a052620001f9565b60003033036200017157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620001749050565b50335b90565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620001da57600080fd5b81516001600160a01b0381168114620001f257600080fd5b9392505050565b60805160a0516126736200023b6000396000818161040f01526107ad0152600081816104fb015281816109c301528181610c610152610d8101526126736000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80637b577b581161010f578063a8444b3a116100a2578063d327c1eb11610071578063d327c1eb14610459578063d6d75cbf146104e3578063dfe86ac5146104f6578063f2fde38b1461051d57600080fd5b8063a8444b3a146103fa578063b91808b11461040d578063bb5af5bd14610433578063caced6c51461044657600080fd5b80638dc34c4d116100de5780638dc34c4d146103ae57806397182ed6146103c157806398bc186a146103d4578063a2e01f75146103e757600080fd5b80637b577b581461034c578063870eea551461035f5780638a04499e146103725780638da5cb5b1461039d57600080fd5b80635cf1b24a11610187578063715018a611610156578063715018a61461030b5780637234eefe14610313578063732c36e814610326578063736f7ce71461033957600080fd5b80635cf1b24a146102bf57806360b6d768146102d25780636c2b1253146102e55780636f965803146102f857600080fd5b80633a481821116101c35780633a4818211461027c5780634e71d92d1461028f5780635068de4c146102995780635c6d9f0c146102ac57600080fd5b80630162f722146101f557806308aaf6b0146102335780632f52a2fd146102465780632fad7efc14610259575b600080fd5b61022061020336600461170e565b600160209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b6102206102413660046118b1565b610530565b6102206102543660046119f9565b6105b0565b61026c610267366004611a78565b61061b565b604051901515815260200161022a565b61022061028a366004611cd1565b6106e2565b610297610759565b005b61026c6102a7366004611d05565b61083d565b61026c6102ba366004611a78565b61094b565b6102206102cd366004611da5565b610961565b6102206102e0366004611e62565b6109be565b6102206102f3366004611e96565b610a0e565b610220610306366004611eca565b610a6b565b610297610abc565b610220610321366004611e62565b610b11565b610220610334366004611f75565b610b4f565b610220610347366004611fa9565b610b8c565b61022061035a366004611fdd565b610bf4565b61022061036d366004612011565b610c5c565b610385610380366004611e96565b610c89565b6040516001600160a01b03909116815260200161022a565b6000546001600160a01b0316610385565b6102976103bc366004612045565b610cb3565b6102206103cf3660046119f9565b610d7c565b6102206103e23660046120a8565b610da9565b6102206103f5366004612153565b610df5565b610385610408366004611f75565b610e61565b7f0000000000000000000000000000000000000000000000000000000000000000610385565b6102206104413660046121c6565b610e85565b6103856104543660046121c6565b610eb6565b6102206104673660046121fa565b8351602094850120835193850193909320604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8188015280820195909552606085019190915260808401929092526001600160a01b031660a0808401919091528151808403909101815260c09092019052805191012090565b6102206104f1366004612011565b610ee0565b6102207f000000000000000000000000000000000000000000000000000000000000000081565b61029761052b366004612277565b610f21565b6000807f80ad7e1b04ee6d994a125f4714ca0720908bd80ed16063ec8aee4b88e9253e2d8360000151846020015180519060200120604051602001610591939291909283526001600160a01b03919091166020830152604082015260600190565b60408051601f1981840301815291905280516020909101209392505050565b6000807f409f5114779a253e700d775d7845e6efc1e83685ac59868d2df3d4de51c7d621836000015184602001516105eb8660400151610bf4565b6040805160208101959095526001600160a01b03909316928401929092526060830152608082015260a001610591565b6000805b828110156106db573684848381811061063a5761063a612292565b905060200281019061064c91906122a8565b9050600061065c610454836122c8565b90506106a88187878681811061067457610674612292565b905060200281019061068691906122a8565b61069090806122d4565b6020018036038101906106a39190611eca565b610fdb565b6106c56106b583806122d4565b6106bf90806122ea565b836110a5565b50505080806106d390612349565b91505061061f565b5092915050565b6000606060005b835181101561074a578161071585838151811061070857610708612292565b6020026020010151610961565b60405160200161072692919061238e565b6040516020818303038152906040529150808061074290612349565b9150506106e9565b50805160209091012092915050565b6107616114bb565b6001600160a01b031661077c6000546001600160a01b031690565b6001600160a01b0316146107ab5760405162461bcd60e51b81526004016107a2906123b0565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166371e928af6107e26114bb565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561082357600080fd5b505af1158015610837573d6000803e3d6000fd5b50505050565b60008061084d60408501856123e5565b61085c9160049160009161242b565b61086591612455565b90506001600160e01b0319811663f2fde38b60e01b036108d35760405162461bcd60e51b8152602060048201526024808201527f7472616e736665724f776e657273686970206973206e6f742064656c6567617460448201526361626c6560e01b60648201526084016107a2565b6001600160e01b03198116630f374f3b60e31b0361093f5760405162461bcd60e51b8152602060048201526024808201527f72656e6f756e63654f776e657273686970206973206e6f742064656c6567617460448201526361626c6560e01b60648201526084016107a2565b50600195945050505050565b60006109588383336110a5565b90505b92915050565b6000807fd97dd99b404d177890f06a8f0fc8e5ed0333fb2ebb6684360709066e8984f5946109928460000151610df5565b61099f8560200151610b8c565b6040805160208101949094528301919091526060820152608001610591565b6000807f00000000000000000000000000000000000000000000000000000000000000006109eb84610b11565b60405161190160f01b602082015260228101929092526042820152606201610591565b6000807f3c36a06e1d288b0f94f565588317a46ad11bc3c96992109f9a2365a2737259a7610a3f84600001516105b0565b602080860151805190820120604051610591949392019283526020830191909152604082015260600190565b6000807fe8d3d963b33868fb116316bc3fd55e8f49123f30e4418f71e140d54b7cd3b2b983600001518460200151604051602001610591939291909283526020830191909152604082015260600190565b610ac46114bb565b6001600160a01b0316610adf6000546001600160a01b031690565b6001600160a01b031614610b055760405162461bcd60e51b81526004016107a2906123b0565b610b0f6000611517565b565b6000807f08c69a206c06f5334b35ceb1186181a713b21aff02cf66285f375084fbef2eb8610b4284600001516106e2565b61099f8560200151610a6b565b6000807f1b0091a1d050ac3fa97e15af326cf512d740529b43d5750169acacda23de278883600001518051906020012061099f8560200151610ee0565b6000606060005b835181101561074a5781610bbf858381518110610bb257610bb2612292565b6020026020010151610a0e565b604051602001610bd092919061238e565b60405160208183030381529060405291508080610bec90612349565b915050610b93565b6000606060005b835181101561074a5781610c27858381518110610c1a57610c1a612292565b6020026020010151610530565b604051602001610c3892919061238e565b60405160208183030381529060405291508080610c5490612349565b915050610bfb565b6000807f00000000000000000000000000000000000000000000000000000000000000006109eb84610ee0565b805160009081610c9882610d7c565b90506000610caa828660200151611567565b95945050505050565b6000610cc161038084612485565b90506000610cd161040884612491565b9050610cdd828261163e565b806001600160a01b0316826001600160a01b031614610d4e5760405162461bcd60e51b815260206004820152602760248201527f4f6e6c7920746865207369676e65722063616e207265766f6b6520612064656c60448201526632b3b0ba34b7b760c91b60648201526084016107a2565b6000610d5c6102f386612485565b6000908152600260205260409020805460ff191660011790555050505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006109eb846105b0565b6000807f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f83600001518460200151856040015186606001516040516020016105919594939291906124c9565b6000807fb16dfdb3b8fa033fe30ac976cd4a50ad256b6811c80d90fcd0b323eec190047d8360000151846020015185604001518051906020012060405160200161059194939291909384526001600160a01b039290921660208401526040830152606082015260800190565b602081015160009081610e7382610c5c565b90506000610caa828660000151611567565b6000807fc32b6dfe0f988d1f2b13248cddd88e320ff0ae86e3ccfe38bab77a80f4477d44610a3f8460000151610b11565b600080610ec683600001516109be565b90506000610ed8828560200151611567565b949350505050565b80516040516000918291610591917f7148a5140265154d6c5200f68c3b86caca80512f179c3903dffd45aeaefc8ea891602001918252602082015260400190565b610f296114bb565b6001600160a01b0316610f446000546001600160a01b031690565b6001600160a01b031614610f6a5760405162461bcd60e51b81526004016107a2906123b0565b6001600160a01b038116610fcf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107a2565b610fd881611517565b50565b60208082015182516001600160a01b038516600090815260018085526040808320858452909552939020549192909161101391612517565b811461107b5760405162461bcd60e51b815260206004820152603160248201527f4f6e652d61742d612d74696d65206f7264657220656e666f726365642e204e6f6044820152701b98d94c881a5cc81d1bdbc81cdb585b1b607a1b60648201526084016107a2565b6001600160a01b039093166000908152600160209081526040808320938352929052209190915550565b6000805b838110156114b35760008585838181106110c5576110c5612292565b90506020028101906110d791906122a8565b6110e09061252f565b90506000808260200151516000036110f85750849050805b6000805b8460200151518110156113985760008560200151828151811061112157611121612292565b60200260200101519050600061113682610c89565b905082600003611147578095508594505b846001600160a01b0316816001600160a01b0316146111c15760405162461bcd60e51b815260206004820152603060248201527f44656c65676174696f6e207369676e657220646f6573206e6f74206d6174636860448201526f103932b8bab4b932b21039b4b3b732b960811b60648201526084016107a2565b81516020810151851461123c5760405162461bcd60e51b815260206004820152603760248201527f44656c65676174696f6e20617574686f7269747920646f6573206e6f74206d6160448201527f7463682070726576696f75732064656c65676174696f6e00000000000000000060648201526084016107a2565b600061124784610a0e565b905060005b8260400151518161ffff16101561137b57600083604001518261ffff168151811061127957611279612292565b60200260200101516000015190506000816001600160a01b0316635068de4c86604001518561ffff16815181106112b2576112b2612292565b6020026020010151602001518e60000151876040518463ffffffff1660e01b81526004016112e29392919061253b565b6020604051808303816000875af1158015611301573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113259190612597565b9050806113665760405162461bcd60e51b815260206004820152600f60248201526e10d85d99585d081c995a9958dd1959608a1b60448201526064016107a2565b50508080611373906125c0565b91505061124c565b50905195509350829150611390905081612349565b9150506110fc565b50835180516001600160a01b031630146113f45760405162461bcd60e51b815260206004820181905260248201527f496e766f636174696f6e2074617267657420646f6573206e6f74206d6174636860448201526064016107a2565b6040516001600160a01b0385811682528916907f185d11175440fcb6458fbc1889b02953452539ed80ad1da781a5449500f6d9609060200160405180910390a261144c81600001518260400151836020015187611692565b96508661149b5760405162461bcd60e51b815260206004820152601a60248201527f44656c656761746f7220657865637574696f6e206661696c656400000000000060448201526064016107a2565b505050505080806114ab90612349565b9150506110a9565b509392505050565b600030330361151157600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b031691506115149050565b50335b90565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000808451604114611582576000935050505061095b565b50505060208201516040830151606084015160001a601b8110156115ae576115ab601b826125e1565b90505b8060ff16601b141580156115c657508060ff16601c14155b156115d7576000935050505061095b565b60408051600081526020810180835288905260ff831691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa15801561162a573d6000803e3d6000fd5b50505060206040510351935050505061095b565b6040516001600160a01b0380841660248301528216604482015261168e9060640160408051601f198184030181529190526020810180516001600160e01b0316636d786a5560e11b1790526116d1565b5050565b60008084836040516020016116a8929190612606565b604051602081830303815290604052905060008082516020840160008a89f19695505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b80356001600160a01b038116811461170957600080fd5b919050565b6000806040838503121561172157600080fd5b61172a836116f2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b604080519081016001600160401b038111828210171561177057611770611738565b60405290565b604051606081016001600160401b038111828210171561177057611770611738565b604051608081016001600160401b038111828210171561177057611770611738565b604051601f8201601f191681016001600160401b03811182821017156117e2576117e2611738565b604052919050565b600082601f8301126117fb57600080fd5b81356001600160401b0381111561181457611814611738565b611827601f8201601f19166020016117ba565b81815284602083860101111561183c57600080fd5b816020850160208301376000918101602001919091529392505050565b60006040828403121561186b57600080fd5b61187361174e565b905061187e826116f2565b815260208201356001600160401b0381111561189957600080fd5b6118a5848285016117ea565b60208301525092915050565b6000602082840312156118c357600080fd5b81356001600160401b038111156118d957600080fd5b610ed884828501611859565b60006001600160401b038211156118fe576118fe611738565b5060051b60200190565b600082601f83011261191957600080fd5b8135602061192e611929836118e5565b6117ba565b82815260059290921b8401810191818101908684111561194d57600080fd5b8286015b8481101561198c5780356001600160401b038111156119705760008081fd5b61197e8986838b0101611859565b845250918301918301611951565b509695505050505050565b6000606082840312156119a957600080fd5b6119b1611776565b90506119bc826116f2565b81526020820135602082015260408201356001600160401b038111156119e157600080fd5b6119ed84828501611908565b60408301525092915050565b600060208284031215611a0b57600080fd5b81356001600160401b03811115611a2157600080fd5b610ed884828501611997565b60008083601f840112611a3f57600080fd5b5081356001600160401b03811115611a5657600080fd5b6020830191508360208260051b8501011115611a7157600080fd5b9250929050565b60008060208385031215611a8b57600080fd5b82356001600160401b03811115611aa157600080fd5b611aad85828601611a2d565b90969095509350505050565b600060608284031215611acb57600080fd5b611ad3611776565b9050611ade826116f2565b81526020820135602082015260408201356001600160401b03811115611b0357600080fd5b6119ed848285016117ea565b600060408284031215611b2157600080fd5b611b2961174e565b905081356001600160401b0380821115611b4257600080fd5b611b4e85838601611997565b83526020840135915080821115611b6457600080fd5b506118a5848285016117ea565b600082601f830112611b8257600080fd5b81356020611b92611929836118e5565b82815260059290921b84018101918181019086841115611bb157600080fd5b8286015b8481101561198c5780356001600160401b03811115611bd45760008081fd5b611be28986838b0101611b0f565b845250918301918301611bb5565b600060408284031215611c0257600080fd5b611c0a61174e565b905081356001600160401b0380821115611c2357600080fd5b611c2f85838601611ab9565b83526020840135915080821115611c4557600080fd5b506118a584828501611b71565b600082601f830112611c6357600080fd5b81356020611c73611929836118e5565b82815260059290921b84018101918181019086841115611c9257600080fd5b8286015b8481101561198c5780356001600160401b03811115611cb55760008081fd5b611cc38986838b0101611bf0565b845250918301918301611c96565b600060208284031215611ce357600080fd5b81356001600160401b03811115611cf957600080fd5b610ed884828501611c52565b60008060008060608587031215611d1b57600080fd5b84356001600160401b0380821115611d3257600080fd5b818701915087601f830112611d4657600080fd5b813581811115611d5557600080fd5b886020828501011115611d6757600080fd5b602092830196509450908601359080821115611d8257600080fd5b50850160608188031215611d9557600080fd5b9396929550929360400135925050565b600060208284031215611db757600080fd5b81356001600160401b03811115611dcd57600080fd5b610ed884828501611bf0565b600060408284031215611deb57600080fd5b611df361174e565b9050813581526020820135602082015292915050565b600060608284031215611e1b57600080fd5b611e2361174e565b905081356001600160401b03811115611e3b57600080fd5b611e4784828501611c52565b825250611e578360208401611dd9565b602082015292915050565b600060208284031215611e7457600080fd5b81356001600160401b03811115611e8a57600080fd5b610ed884828501611e09565b600060208284031215611ea857600080fd5b81356001600160401b03811115611ebe57600080fd5b610ed884828501611b0f565b600060408284031215611edc57600080fd5b6109588383611dd9565b600060208284031215611ef857600080fd5b604051602081018181106001600160401b0382111715611f1a57611f1a611738565b6040529135825250919050565b600060408284031215611f3957600080fd5b611f4161174e565b905081356001600160401b03811115611f5957600080fd5b611f65848285016117ea565b825250611e578360208401611ee6565b600060208284031215611f8757600080fd5b81356001600160401b03811115611f9d57600080fd5b610ed884828501611f27565b600060208284031215611fbb57600080fd5b81356001600160401b03811115611fd157600080fd5b610ed884828501611b71565b600060208284031215611fef57600080fd5b81356001600160401b0381111561200557600080fd5b610ed884828501611908565b60006020828403121561202357600080fd5b6109588383611ee6565b60006040828403121561203f57600080fd5b50919050565b6000806040838503121561205857600080fd5b82356001600160401b038082111561206f57600080fd5b61207b8683870161202d565b9350602085013591508082111561209157600080fd5b5061209e8582860161202d565b9150509250929050565b6000602082840312156120ba57600080fd5b81356001600160401b03808211156120d157600080fd5b90830190608082860312156120e557600080fd5b6120ed611798565b8235828111156120fc57600080fd5b612108878286016117ea565b82525060208301358281111561211d57600080fd5b612129878286016117ea565b60208301525060408301356040820152612145606084016116f2565b606082015295945050505050565b60006020828403121561216557600080fd5b81356001600160401b0381111561217b57600080fd5b610ed884828501611ab9565b60006040828403121561219957600080fd5b6121a161174e565b905081356001600160401b03808211156121ba57600080fd5b611b4e85838601611e09565b6000602082840312156121d857600080fd5b81356001600160401b038111156121ee57600080fd5b610ed884828501612187565b6000806000806080858703121561221057600080fd5b84356001600160401b038082111561222757600080fd5b612233888389016117ea565b9550602087013591508082111561224957600080fd5b50612256878288016117ea565b9350506040850135915061226c606086016116f2565b905092959194509250565b60006020828403121561228957600080fd5b610958826116f2565b634e487b7160e01b600052603260045260246000fd5b60008235603e198336030181126122be57600080fd5b9190910192915050565b600061095b3683612187565b60008235605e198336030181126122be57600080fd5b6000808335601e1984360301811261230157600080fd5b8301803591506001600160401b0382111561231b57600080fd5b6020019150600581901b3603821315611a7157600080fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161235b5761235b612333565b5060010190565b60005b8381101561237d578181015183820152602001612365565b838111156108375750506000910152565b600083516123a0818460208801612362565b9190910191825250602001919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000808335601e198436030181126123fc57600080fd5b8301803591506001600160401b0382111561241657600080fd5b602001915036819003821315611a7157600080fd5b6000808585111561243b57600080fd5b8386111561244857600080fd5b5050820193919092039150565b6001600160e01b0319813581811691600485101561247d5780818660040360031b1b83161692505b505092915050565b600061095b3683611b0f565b600061095b3683611f27565b600081518084526124b5816020860160208601612362565b601f01601f19169290920160200192915050565b85815260a0602082015260006124e260a083018761249d565b82810360408401526124f4818761249d565b606084019590955250506001600160a01b03919091166080909101529392505050565b6000821982111561252a5761252a612333565b500190565b600061095b3683611bf0565b60608152600061254e606083018661249d565b828103602084015260018060a01b03855116815260208501516020820152604085015160606040830152612585606083018261249d565b92505050826040830152949350505050565b6000602082840312156125a957600080fd5b815180151581146125b957600080fd5b9392505050565b600061ffff8083168181036125d7576125d7612333565b6001019392505050565b600060ff821660ff84168060ff038211156125fe576125fe612333565b019392505050565b60008351612618818460208801612362565b60609390931b6bffffffffffffffffffffffff1916919092019081526014019291505056fea26469706673582212208d254d83fc7377d6a77f467f97cc14e547997832c25b10c83c80645a8f2d05a364736f6c634300080f0033";

type DelegatableNotaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DelegatableNotaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DelegatableNotary__factory extends ContractFactory {
  constructor(...args: DelegatableNotaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DelegatableNotary";
  }

  deploy(
    _notary_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DelegatableNotary> {
    return super.deploy(_notary_, overrides || {}) as Promise<DelegatableNotary>;
  }
  getDeployTransaction(
    _notary_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_notary_, overrides || {});
  }
  attach(address: string): DelegatableNotary {
    return super.attach(address) as DelegatableNotary;
  }
  connect(signer: Signer): DelegatableNotary__factory {
    return super.connect(signer) as DelegatableNotary__factory;
  }
  static readonly contractName: "DelegatableNotary";
  public readonly contractName: "DelegatableNotary";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelegatableNotaryInterface {
    return new utils.Interface(_abi) as DelegatableNotaryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): DelegatableNotary {
    return new Contract(address, _abi, signerOrProvider) as DelegatableNotary;
  }
}
