/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CitizenAlpha, CitizenAlphaInterface } from "../CitizenAlpha";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "metadata_",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "citizen",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    name: "Issued",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "metadata",
        type: "address",
      },
    ],
    name: "NewMetadata",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nation",
        type: "address",
      },
    ],
    name: "NewNation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "notary",
        type: "address",
      },
    ],
    name: "NewNotary",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "NewResolver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "citizen",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    name: "Revoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "getId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "getLink",
    outputs: [
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMetadata",
    outputs: [
      {
        internalType: "address",
        name: "metadata",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNation",
    outputs: [
      {
        internalType: "address",
        name: "nation",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNotary",
    outputs: [
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getResolver",
    outputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "isCitizen",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "reset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "metadata",
        type: "address",
      },
    ],
    name: "setMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nation",
        type: "address",
      },
    ],
    name: "setNation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "notary",
        type: "address",
      },
    ],
    name: "setNotary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "setURISplitter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalIssued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002288380380620022888339810160408190526200003491620001bb565b81816000620000448382620002d4565b506001620000538282620002d4565b505050620000706200006a6200009860201b60201c565b6200009c565b5050600880546001600160a01b0319166001600160a01b0392909216919091179055620003a0565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200011657600080fd5b81516001600160401b0380821115620001335762000133620000ee565b604051601f8301601f19908116603f011681019082821181831017156200015e576200015e620000ee565b816040528381526020925086838588010111156200017b57600080fd5b600091505b838210156200019f578582018301518183018401529082019062000180565b83821115620001b15760008385830101525b9695505050505050565b600080600060608486031215620001d157600080fd5b83516001600160a01b0381168114620001e957600080fd5b60208501519093506001600160401b03808211156200020757600080fd5b620002158783880162000104565b935060408601519150808211156200022c57600080fd5b506200023b8682870162000104565b9150509250925092565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002cf57600081815260208120601f850160051c81016020861015620002aa5750805b601f850160051c820191505b81811015620002cb57828155600101620002b6565b5050505b505050565b81516001600160401b03811115620002f057620002f0620000ee565b620003088162000301845462000245565b8462000281565b602080601f831160018114620003405760008415620003275750858301515b600019600386901b1c1916600185901b178555620002cb565b600085815260208120601f198616915b82811015620003715788860151825594840194600190910190840162000350565b5085821015620003905787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611ed880620003b06000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c80637a5b4f591161011a578063b46a357f116100ad578063e985e9c51161007c578063e985e9c51461044c578063f2fde38b14610488578063f3caad031461049b578063f3cb8385146104ae578063f5be3193146104c157600080fd5b8063b46a357f14610404578063b88d4fde14610415578063b91808b114610428578063c87b56dd1461043957600080fd5b80639d6abe4f116100e95780639d6abe4f146103a1578063a22cb465146103cd578063a394a0e6146103e0578063a9dc491d146103f357600080fd5b80637a5b4f59146103645780638da5cb5b1461037557806391d148541461038657806395d89b411461039957600080fd5b80636352211e11610192578063715018a611610161578063715018a61461032357806371e928af1461032b57806373ac86671461033e57806374a8f1031461035157600080fd5b80636352211e146102c957806365f68c89146102dc5780636b8ab97d146102fd57806370a082311461031057600080fd5b806323b872dd116101ce57806323b872dd1461027d57806342842e0e146102905780634e543b26146102a357806362aca822146102b657600080fd5b806301ffc9a71461020057806306fdde0314610228578063081812fc1461023d578063095ea7b314610268575b600080fd5b61021361020e366004611989565b6104c9565b60405190151581526020015b60405180910390f35b6102306104da565b60405161021f91906119fe565b61025061024b366004611a11565b61056c565b6040516001600160a01b03909116815260200161021f565b61027b610276366004611a46565b610593565b005b61027b61028b366004611a70565b6106ad565b61027b61029e366004611a70565b6106f5565b61027b6102b1366004611aac565b610710565b61027b6102c4366004611aac565b61076d565b6102506102d7366004611a11565b6107c3565b6102ef6102ea366004611aac565b610823565b60405190815260200161021f565b61027b61030b366004611aac565b610896565b6102ef61031e366004611aac565b6109eb565b61027b610a71565b61027b610339366004611aac565b610a85565b61027b61034c366004611ad5565b610bc8565b61027b61035f366004611aac565b610bee565b6008546001600160a01b0316610250565b6006546001600160a01b0316610250565b610213610394366004611af2565b610cdc565b610230610d59565b6102506103af366004611aac565b6001600160a01b039081166000908152600d60205260409020541690565b61027b6103db366004611b1e565b610d68565b61027b6103ee366004611aac565b610d73565b600b546001600160a01b0316610250565b6009546001600160a01b0316610250565b61027b610423366004611bc4565b610dc9565b600a546001600160a01b0316610250565b610230610447366004611a11565b610e48565b61021361045a366004611c6f565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61027b610496366004611aac565b610f8e565b6102136104a9366004611aac565b611007565b61027b6104bc366004611aac565b611028565b6007546102ef565b60006104d48261107e565b92915050565b6060600080546104e990611c99565b80601f016020809104026020016040519081016040528092919081815260200182805461051590611c99565b80156105625780601f1061053757610100808354040283529160200191610562565b820191906000526020600020905b81548152906001019060200180831161054557829003601f168201915b5050505050905090565b6000610577826110ce565b506000908152600460205260409020546001600160a01b031690565b600061059e826107c3565b9050806001600160a01b0316836001600160a01b0316036106105760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061062c575061062c813361045a565b61069e5760405162461bcd60e51b815260206004820152603e60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c00006064820152608401610607565b6106a8838361112d565b505050565b60405162461bcd60e51b815260206004820152601760248201527f436974697a656e416c7068613a20536f756c626f756e640000000000000000006044820152606401610607565b6106a883838360405180602001604052806000815250610dc9565b61071861119b565b600b80546001600160a01b0319166001600160a01b0383169081179091556040519081527f40bf5fe825856ca00c4ac7cef649810e96d3c7cc944ec920e80190d26d10f5af906020015b60405180910390a150565b61077561119b565b600980546001600160a01b0319166001600160a01b0383169081179091556040519081527f99fecd89e8cae8d2ef43d16762048bbb7d529d1a1b450b2bbb77f95b7109cd6190602001610762565b6000818152600260205260408120546001600160a01b0316806104d45760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610607565b600061082e82611007565b61087a5760405162461bcd60e51b815260206004820152601f60248201527f436974697a656e416c7068613a6e6f742d6163746976652d636974697a656e006044820152606401610607565b506001600160a01b03166000908152600c602052604090205490565b600a546001600160a01b031663f13eed97336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156108ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109109190611ccd565b61092c5760405162461bcd60e51b815260040161060790611cea565b61093581611007565b1561097c5760405162461bcd60e51b815260206004820152601760248201527621b4ba34bd32b720b63834309d34b996b1b4ba34bd32b760491b6044820152606401610607565b610985816111f5565b6109d15760405162461bcd60e51b815260206004820152601a60248201527f436974697a656e416c7068613a6e657665722d636974697a656e0000000000006044820152606401610607565b6001600160a01b03166000908152600c6020526040812055565b60006001600160a01b038216610a555760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610607565b506001600160a01b031660009081526003602052604090205490565b610a7961119b565b610a83600061121b565b565b600033600a5460405163f13eed9760e01b81526001600160a01b03808416600483015292935091169063f13eed9790602401602060405180830381865afa158015610ad4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af89190611ccd565b610b145760405162461bcd60e51b815260040161060790611cea565b610b1d82611007565b15610b645760405162461bcd60e51b815260206004820152601760248201527621b4ba34bd32b720b63834309d34b996b1b4ba34bd32b760491b6044820152606401610607565b610b6d826111f5565b15610bba5760405162461bcd60e51b815260206004820181905260248201527f436974697a656e416c7068613a7265766f6b65642d636974697a656e736869706044820152606401610607565b610bc4828261126d565b5050565b610bd061119b565b600b8054911515600160a01b0260ff60a01b19909216919091179055565b600033600a5460405163f13eed9760e01b81526001600160a01b03808416600483015292935091169063f13eed9790602401602060405180830381865afa158015610c3d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c619190611ccd565b610c7d5760405162461bcd60e51b815260040161060790611cea565b610c8682611007565b610cd25760405162461bcd60e51b815260206004820152601860248201527f436974697a656e416c7068613a6e6f742d636974697a656e00000000000000006044820152606401610607565b610bc4828261131a565b600954604051632474521560e21b8152600481018490526001600160a01b03838116602483015260009216906391d1485490604401602060405180830381865afa158015610d2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d529190611ccd565b9392505050565b6060600180546104e990611c99565b610bc4338383611381565b610d7b61119b565b600a80546001600160a01b0319166001600160a01b0383169081179091556040519081527fe2bea979965a228cbde9e65befc96655827ad8934c3c6b9f8b9b66e1f907ef8890602001610762565b610dd33383611447565b610e365760405162461bcd60e51b815260206004820152602e60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526d1c881b9bdc88185c1c1c9bdd995960921b6064820152608401610607565b610e42848484846114c6565b50505050565b600854600b546060916001600160a01b031690600160a01b900460ff16610ed75760405163c87b56dd60e01b8152600481018490526001600160a01b0382169063c87b56dd906024015b600060405180830381865afa158015610eaf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d529190810190611d21565b600b546001600160a01b03163314610f5b5760405163c87b56dd60e01b8152600481018490526001600160a01b0382169063c87b56dd90602401600060405180830381865afa158015610f2e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f569190810190611d21565b610d52565b604051630c5bbf5960e01b8152600481018490526001600160a01b03821690630c5bbf5990602401610e92565b50919050565b610f9661119b565b6001600160a01b038116610ffb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610607565b6110048161121b565b50565b6000611012826109eb565b6001146110205760006104d4565b600192915050565b61103061119b565b600880546001600160a01b0319166001600160a01b0383169081179091556040519081527fc3cc2ca4478213568729272d27f2d5f5a1e0ffd0155e3ad804cc7d679a94672b90602001610762565b60006001600160e01b031982166380ac58cd60e01b14806110af57506001600160e01b03198216635b5e139f60e01b145b806104d457506301ffc9a760e01b6001600160e01b03198316146104d4565b6000818152600260205260409020546001600160a01b03166110045760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610607565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190611162826107c3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6006546001600160a01b03163314610a835760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610607565b6001600160a01b0381166000908152600c602052604081205481036110205760006104d4565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600780546000918261127e83611dae565b909155506001600160a01b038481166000908152600d6020908152604080832080546001600160a01b03191694881694909417909355600c90522081905590506112c883826114f9565b816001600160a01b0316836001600160a01b03167f7533f62ec6601bf9c87f8d96bf756b4b495e2a0e26ec9284e4927926ed6b3afd8360405161130d91815260200190565b60405180910390a3505050565b6001600160a01b0382166000908152600c602052604090205461133c8161163b565b816001600160a01b0316836001600160a01b03167fa96db3edccc72000dff77fc380cfbabe1646529eadd835eb11f2f8315669ec768360405161130d91815260200190565b816001600160a01b0316836001600160a01b0316036113e25760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610607565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910161130d565b600080611453836107c3565b9050806001600160a01b0316846001600160a01b0316148061149a57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806114be5750836001600160a01b03166114b38461056c565b6001600160a01b0316145b949350505050565b6114d18484846116d6565b6114dd84848484611872565b610e425760405162461bcd60e51b815260040161060790611dc7565b6001600160a01b03821661154f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610607565b6000818152600260205260409020546001600160a01b0316156115b45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610607565b6001600160a01b03821660009081526003602052604081208054600192906115dd908490611e19565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000611646826107c3565b905061165360008361112d565b6001600160a01b038116600090815260036020526040812080546001929061167c908490611e31565b909155505060008281526002602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b826001600160a01b03166116e9826107c3565b6001600160a01b03161461174d5760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608401610607565b6001600160a01b0382166117af5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610607565b6117ba60008261112d565b6001600160a01b03831660009081526003602052604081208054600192906117e3908490611e31565b90915550506001600160a01b0382166000908152600360205260408120805460019290611811908490611e19565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006001600160a01b0384163b1561196857604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118b6903390899088908890600401611e48565b6020604051808303816000875af19250505080156118f1575060408051601f3d908101601f191682019092526118ee91810190611e85565b60015b61194e573d80801561191f576040519150601f19603f3d011682016040523d82523d6000602084013e611924565b606091505b5080516000036119465760405162461bcd60e51b815260040161060790611dc7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506114be565b506001949350505050565b6001600160e01b03198116811461100457600080fd5b60006020828403121561199b57600080fd5b8135610d5281611973565b60005b838110156119c15781810151838201526020016119a9565b83811115610e425750506000910152565b600081518084526119ea8160208601602086016119a6565b601f01601f19169290920160200192915050565b602081526000610d5260208301846119d2565b600060208284031215611a2357600080fd5b5035919050565b80356001600160a01b0381168114611a4157600080fd5b919050565b60008060408385031215611a5957600080fd5b611a6283611a2a565b946020939093013593505050565b600080600060608486031215611a8557600080fd5b611a8e84611a2a565b9250611a9c60208501611a2a565b9150604084013590509250925092565b600060208284031215611abe57600080fd5b610d5282611a2a565b801515811461100457600080fd5b600060208284031215611ae757600080fd5b8135610d5281611ac7565b60008060408385031215611b0557600080fd5b82359150611b1560208401611a2a565b90509250929050565b60008060408385031215611b3157600080fd5b611b3a83611a2a565b91506020830135611b4a81611ac7565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611b9457611b94611b55565b604052919050565b600067ffffffffffffffff821115611bb657611bb6611b55565b50601f01601f191660200190565b60008060008060808587031215611bda57600080fd5b611be385611a2a565b9350611bf160208601611a2a565b925060408501359150606085013567ffffffffffffffff811115611c1457600080fd5b8501601f81018713611c2557600080fd5b8035611c38611c3382611b9c565b611b6b565b818152886020838501011115611c4d57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b60008060408385031215611c8257600080fd5b611c8b83611a2a565b9150611b1560208401611a2a565b600181811c90821680611cad57607f821691505b602082108103610f8857634e487b7160e01b600052602260045260246000fd5b600060208284031215611cdf57600080fd5b8151610d5281611ac7565b60208082526017908201527f436974697a656e416c7068613a6e6f742d6e6f74617279000000000000000000604082015260600190565b600060208284031215611d3357600080fd5b815167ffffffffffffffff811115611d4a57600080fd5b8201601f81018413611d5b57600080fd5b8051611d69611c3382611b9c565b818152856020838501011115611d7e57600080fd5b611d8f8260208301602086016119a6565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611dc057611dc0611d98565b5060010190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008219821115611e2c57611e2c611d98565b500190565b600082821015611e4357611e43611d98565b500390565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e7b908301846119d2565b9695505050505050565b600060208284031215611e9757600080fd5b8151610d528161197356fea2646970667358221220958e2e43a098069a856ba959bb33759f604681e8dbed92a564244d77a06405ef64736f6c634300080f0033";

type CitizenAlphaConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CitizenAlphaConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CitizenAlpha__factory extends ContractFactory {
  constructor(...args: CitizenAlphaConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CitizenAlpha";
  }

  deploy(
    metadata_: string,
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CitizenAlpha> {
    return super.deploy(
      metadata_,
      name_,
      symbol_,
      overrides || {}
    ) as Promise<CitizenAlpha>;
  }
  getDeployTransaction(
    metadata_: string,
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      metadata_,
      name_,
      symbol_,
      overrides || {}
    );
  }
  attach(address: string): CitizenAlpha {
    return super.attach(address) as CitizenAlpha;
  }
  connect(signer: Signer): CitizenAlpha__factory {
    return super.connect(signer) as CitizenAlpha__factory;
  }
  static readonly contractName: "CitizenAlpha";
  public readonly contractName: "CitizenAlpha";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CitizenAlphaInterface {
    return new utils.Interface(_abi) as CitizenAlphaInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CitizenAlpha {
    return new Contract(address, _abi, signerOrProvider) as CitizenAlpha;
  }
}
