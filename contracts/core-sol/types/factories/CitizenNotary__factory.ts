/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CitizenNotary, CitizenNotaryInterface } from "../CitizenNotary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_citizenToken_",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_founders",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "citizenToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "disableRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "adminRole",
        type: "bytes32",
      },
    ],
    name: "enableRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "isCitizen",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "isFounder",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "issue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "to",
        type: "address[]",
      },
    ],
    name: "issueBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "revoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "citizen",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "roleStatus",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620014503803806200145083398101604081905262000034916200035c565b600180546001600160a01b0319166001600160a01b03841617815560026020527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b805460ff1990811683179091557fb4ea070c0b839b8a2ea3fe25d148c2f2fb7a651b7bfa68f3df9a02c12d0900fb80548216831790556000805160206200141083398151915260009081527f7bf0cfa21e510f0e0ef86822722c0254e9c01cf85f2f2312b0216105a1a6121480549092169092179055620000f79033620001dd565b60005b8151811015620001d457620001356000801b83838151811062000121576200012162000445565b6020026020010151620001dd60201b60201c565b62000151600080516020620014108339815191526000620001ed565b6200016d600080516020620014308339815191526000620001ed565b620001966000805160206200141083398151915283838151811062000121576200012162000445565b620001bf6000805160206200143083398151915283838151811062000121576200012162000445565b80620001cb816200045b565b915050620000fa565b50505062000483565b620001e9828262000238565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b620002448282620002c0565b620001e9576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556200027c3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526002602052604081205460ff16620002e057506000620002fa565b620002f783836200030060201b620007fa1760201c565b90505b92915050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b80516001600160a01b03811681146200034157600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200037057600080fd5b6200037b8362000329565b602084810151919350906001600160401b03808211156200039b57600080fd5b818601915086601f830112620003b057600080fd5b815181811115620003c557620003c562000346565b8060051b604051601f19603f83011681018181108582111715620003ed57620003ed62000346565b6040529182528482019250838101850191898311156200040c57600080fd5b938501935b828510156200043557620004258562000329565b8452938501939285019262000411565b8096505050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200047c57634e487b7160e01b600052601160045260246000fd5b5060010190565b610f7d80620004936000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80637c4a13b111610097578063d389c6a211610066578063d389c6a214610223578063d547741f14610236578063eb37becd14610249578063f3caad031461026457600080fd5b80637c4a13b1146101e257806391d14854146101f5578063a217fddf14610208578063c7b578411461021057600080fd5b806336568abe116100d357806336568abe14610196578063671dfbe2146101a957806371e928af146101bc57806374a8f103146101cf57600080fd5b806301ffc9a714610105578063248a9ca31461012d5780632da74d8c1461015e5780632f2ff15d14610181575b600080fd5b610118610113366004610c0a565b610277565b60405190151581526020015b60405180910390f35b61015061013b366004610c34565b60009081526020819052604090206001015490565b604051908152602001610124565b61011861016c366004610c34565b60009081526002602052604090205460ff1690565b61019461018f366004610c69565b6102ae565b005b6101946101a4366004610c69565b61033b565b6101946101b7366004610c95565b6103b9565b6101946101ca366004610cb7565b61044a565b6101946101dd366004610cb7565b6104b9565b6101946101f0366004610c34565b610528565b610118610203366004610c69565b6105ba565b610150600081565b61011861021e366004610cb7565b6105e9565b610194610231366004610cd2565b610603565b610194610244366004610c69565b6106bb565b6001546040516001600160a01b039091168152602001610124565b610118610272366004610cb7565b61078b565b60006001600160e01b03198216637965db0b60e01b14806102a857506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000828152602081905260409020600101546102c981610823565b60008381526002602052604090205460ff1661032c5760405162461bcd60e51b815260206004820152601b60248201527f436974697a656e4e6f746172793a696e6163746976652d726f6c65000000000060448201526064015b60405180910390fd5b6103368383610830565b505050565b6001600160a01b03811633146103ab5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610323565b6103b582826108b4565b5050565b60006103c481610823565b60008381526002602052604090205460ff16156104235760405162461bcd60e51b815260206004820152601a60248201527f436974697a656e4e6f746172793a726f6c652d656e61626c65640000000000006044820152606401610323565b61042d8383610919565b50506000908152600260205260409020805460ff19166001179055565b336104757f82dc1ec5ffcc1ce66f6c1c31b0ec106422173af966c099db66124841894b3c8a826105ba565b806104935750610493600080516020610f28833981519152826105ba565b6104af5760405162461bcd60e51b815260040161032390610d47565b6103b58233610964565b336104e47f82dc1ec5ffcc1ce66f6c1c31b0ec106422173af966c099db66124841894b3c8a826105ba565b806105025750610502600080516020610f28833981519152826105ba565b61051e5760405162461bcd60e51b815260040161032390610d47565b6103b582336109d0565b600061053381610823565b60008281526002602052604090205460ff1615156001146105965760405162461bcd60e51b815260206004820152601b60248201527f436974697a656e4e6f746172793a726f6c652d64697361626c656400000000006044820152606401610323565b6105a1826000610919565b506000908152600260205260409020805460ff19169055565b60008281526002602052604081205460ff166105d8575060006102a8565b6105e283836107fa565b9392505050565b60006102a8600080516020610f28833981519152836105ba565b3361062e7f82dc1ec5ffcc1ce66f6c1c31b0ec106422173af966c099db66124841894b3c8a826105ba565b8061064c575061064c600080516020610f28833981519152826105ba565b6106685760405162461bcd60e51b815260040161032390610d47565b60005b828110156106b5576106a384848381811061068857610688610d88565b905060200201602081019061069d9190610cb7565b33610964565b806106ad81610db4565b91505061066b565b50505050565b6000828152602081905260409020600101546106d681610823565b826107235760405162461bcd60e51b815260206004820152601d60248201527f436974697a656e4e6f746172793a696e76616c69642d726571756573740000006044820152606401610323565b60008381526002602052604090205460ff166107815760405162461bcd60e51b815260206004820152601b60248201527f436974697a656e4e6f746172793a696e6163746976652d726f6c6500000000006044820152606401610323565b61033683836108b4565b60015460405163f3caad0360e01b81526001600160a01b038381166004830152600092169063f3caad0390602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a89190610dcd565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61082d8133610a0a565b50565b61083a82826105ba565b6103b5576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556108703390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6108be82826105ba565b156103b5576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b60015460405163b40464b960e01b81526001600160a01b03848116600483015283811660248301529091169063b40464b9906044015b600060405180830381600087803b1580156109b457600080fd5b505af11580156109c8573d6000803e3d6000fd5b505050505050565b600154604051636e79fd9560e11b81526001600160a01b03848116600483015283811660248301529091169063dcf3fb2a9060440161099a565b610a1482826105ba565b6103b557610a2c816001600160a01b03166014610a6e565b610a37836020610a6e565b604051602001610a48929190610e1b565b60408051601f198184030181529082905262461bcd60e51b825261032391600401610e90565b60606000610a7d836002610ec3565b610a88906002610ee2565b67ffffffffffffffff811115610aa057610aa0610efa565b6040519080825280601f01601f191660200182016040528015610aca576020820181803683370190505b509050600360fc1b81600081518110610ae557610ae5610d88565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610b1457610b14610d88565b60200101906001600160f81b031916908160001a9053506000610b38846002610ec3565b610b43906001610ee2565b90505b6001811115610bbb576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610b7757610b77610d88565b1a60f81b828281518110610b8d57610b8d610d88565b60200101906001600160f81b031916908160001a90535060049490941c93610bb481610f10565b9050610b46565b5083156105e25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610323565b600060208284031215610c1c57600080fd5b81356001600160e01b0319811681146105e257600080fd5b600060208284031215610c4657600080fd5b5035919050565b80356001600160a01b0381168114610c6457600080fd5b919050565b60008060408385031215610c7c57600080fd5b82359150610c8c60208401610c4d565b90509250929050565b60008060408385031215610ca857600080fd5b50508035926020909101359150565b600060208284031215610cc957600080fd5b6105e282610c4d565b60008060208385031215610ce557600080fd5b823567ffffffffffffffff80821115610cfd57600080fd5b818501915085601f830112610d1157600080fd5b813581811115610d2057600080fd5b8660208260051b8501011115610d3557600080fd5b60209290920196919550909350505050565b60208082526021908201527f436974697a656e4e6f746172793a756e617574686f72697a65642d61636365736040820152607360f81b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201610dc657610dc6610d9e565b5060010190565b600060208284031215610ddf57600080fd5b815180151581146105e257600080fd5b60005b83811015610e0a578181015183820152602001610df2565b838111156106b55750506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610e53816017850160208801610def565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610e84816028840160208801610def565b01602801949350505050565b6020815260008251806020840152610eaf816040850160208701610def565b601f01601f19169190910160400192915050565b6000816000190483118215151615610edd57610edd610d9e565b500290565b60008219821115610ef557610ef5610d9e565b500190565b634e487b7160e01b600052604160045260246000fd5b600081610f1f57610f1f610d9e565b50600019019056fe75c8926d5f068ebc530646119a6c8b65785c321705e3a39f3f7898e9030b9c80a2646970667358221220272ca6f13802d5fa3f38583aa5614ba7f07c5459e31854e6c2d7c55df6a6352c64736f6c634300080f003375c8926d5f068ebc530646119a6c8b65785c321705e3a39f3f7898e9030b9c8082dc1ec5ffcc1ce66f6c1c31b0ec106422173af966c099db66124841894b3c8a";

type CitizenNotaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CitizenNotaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CitizenNotary__factory extends ContractFactory {
  constructor(...args: CitizenNotaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CitizenNotary";
  }

  deploy(
    _citizenToken_: string,
    _founders: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CitizenNotary> {
    return super.deploy(_citizenToken_, _founders, overrides || {}) as Promise<CitizenNotary>;
  }
  getDeployTransaction(
    _citizenToken_: string,
    _founders: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_citizenToken_, _founders, overrides || {});
  }
  attach(address: string): CitizenNotary {
    return super.attach(address) as CitizenNotary;
  }
  connect(signer: Signer): CitizenNotary__factory {
    return super.connect(signer) as CitizenNotary__factory;
  }
  static readonly contractName: "CitizenNotary";
  public readonly contractName: "CitizenNotary";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CitizenNotaryInterface {
    return new utils.Interface(_abi) as CitizenNotaryInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CitizenNotary {
    return new Contract(address, _abi, signerOrProvider) as CitizenNotary;
  }
}
