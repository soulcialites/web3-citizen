/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { CitizenMetadata, CitizenMetadataInterface } from "../CitizenMetadata";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_svgColor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "appendSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "avatar",
            type: "string",
          },
          {
            internalType: "string",
            name: "did",
            type: "string",
          },
          {
            internalType: "string",
            name: "ensAlias",
            type: "string",
          },
          {
            internalType: "string",
            name: "ensNode",
            type: "string",
          },
          {
            internalType: "string",
            name: "ensResolver",
            type: "string",
          },
          {
            internalType: "string",
            name: "traits",
            type: "string",
          },
        ],
        internalType: "struct MetadataResolver.Metadata",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "source",
        type: "address",
      },
    ],
    name: "setSource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "svgColor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001b3538038062001b35833981016040819052610031916100b1565b8061003b33610061565b600180546001600160a01b0319166001600160a01b0392909216919091179055506100e1565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b611a4480620000f16000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610127578063a3c54bb914610138578063c87b56dd1461014b578063f2fde38b1461016b578063fc0c546a1461017e57600080fd5b8063144fa6d7146100a35780632a50c146146100b85780632c50c529146100e15780635942fda9146100f4578063715018a61461011f575b600080fd5b6100b66100b136600461120d565b610185565b005b6100cb6100c636600461120d565b6101da565b6040516100d89190611286565b60405180910390f35b6100b66100ef36600461120d565b610260565b600154610107906001600160a01b031681565b6040516001600160a01b0390911681526020016100d8565b6100b66102dc565b6000546001600160a01b0316610107565b6100b6610146366004611371565b610312565b61015e6101593660046113a1565b6103e1565b6040516100d891906113ba565b6100b661017936600461120d565b6103ec565b6000610107565b6000546001600160a01b031633146101b85760405162461bcd60e51b81526004016101af906113cd565b60405180910390fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6101e26111b3565b6002546040516365f68c8960e01b81526001600160a01b03808516600483015261025a9285929116906365f68c8990602401602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102559190611402565b610487565b92915050565b6000546001600160a01b0316331461028a5760405162461bcd60e51b81526004016101af906113cd565b600380546001810182556000919091527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146103065760405162461bcd60e51b81526004016101af906113cd565b6103106000610624565b565b6000546001600160a01b0316331461033c5760405162461bcd60e51b81526004016101af906113cd565b600354821061039b5760405162461bcd60e51b815260206004820152602560248201527f4d657461646174615265736f6c7665723a696e76616c69642d736f757263652d6044820152640d2dcc8caf60db1b60648201526084016101af565b80600383815481106103af576103af61141b565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055505050565b606061025a82610674565b6000546001600160a01b031633146104165760405162461bcd60e51b81526004016101af906113cd565b6001600160a01b03811661047b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101af565b61048481610624565b50565b61048f6111b3565b600061049a84610759565b905060006104a7846109fb565b6040516020016104b7919061144d565b6040516020818303038152906040529050600080836060015151116104ef576104ea866001600160a01b03166014610b04565b6104f5565b82606001515b600254604051639d6abe4f60e01b81526001600160a01b03898116600483015292935060009290911690639d6abe4f90602401602060405180830381865afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610569919061147e565b9050600060405180610100016040528085815260200184815260200186600001518152602001866020015181526020018660600151815260200186604001518152602001866080015181526020018660a001516105f5604051806040016040528060048152602001636c696e6b60e01b8152506105f0876001600160a01b03166014610b04565b610ca7565b60405160200161060692919061149b565b60408051808303601f19018152919052905298975050505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6002546040516331a9108f60e11b8152600481018390526060916001600160a01b0316906000906106f1908390636352211e90602401602060405180830381865afa1580156106c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106eb919061147e565b85610487565b90506107318160000151826020015183604001518460e0015160405160200161071d94939291906114ca565b604051602081830303815290604052610cd3565b60405160200161074191906115bb565b60405160208183030381529060405292505050919050565b6107926040518060c001604052806060815260200160608152602001606081526020016060815260200160608152602001606081525090565b600060036000815481106107a8576107a861141b565b600091825260208220015460408051633667fe0d60e11b81526001600160a01b03878116600483015260248201929092526003604482015262191a5960ea1b6064820152911692508290636ccffc1a90608401600060405180830381865afa158015610818573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261084091908101906116ab565b60408051633667fe0d60e11b81526001600160a01b0387811660048301526024820192909252600660448201526530bb30ba30b960d11b606482015291925060009190841690636ccffc1a90608401600060405180830381865afa1580156108ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108d491908101906116ab565b60405163152860a360e11b81526001600160a01b03878116600483015291925060009182918291871690632a50c14690602401600060405180830381865afa158015610924573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261094c91908101906116e0565b925092509250600061095d89610e38565b90506040518060c001604052808681526020018781526020018560405160200161098991815260200190565b6040516020818303038152906040528152602001848152602001836001600160a01b031660006001600160a01b0316036109d257604051806020016040528060008152506109e6565b6109e6846001600160a01b03166014610b04565b81526020019190915298975050505050505050565b606081600003610a225750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610a4c5780610a3681611751565b9150610a459050600a83611780565b9150610a26565b60008167ffffffffffffffff811115610a6757610a67611600565b6040519080825280601f01601f191660200182016040528015610a91576020820181803683370190505b5090505b8415610afc57610aa6600183611794565b9150610ab3600a866117ab565b610abe9060306117bf565b60f81b818381518110610ad357610ad361141b565b60200101906001600160f81b031916908160001a905350610af5600a86611780565b9450610a95565b949350505050565b60606000610b138360026117d7565b610b1e9060026117bf565b67ffffffffffffffff811115610b3657610b36611600565b6040519080825280601f01601f191660200182016040528015610b60576020820181803683370190505b509050600360fc1b81600081518110610b7b57610b7b61141b565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110610baa57610baa61141b565b60200101906001600160f81b031916908160001a9053506000610bce8460026117d7565b610bd99060016117bf565b90505b6001811115610c51576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110610c0d57610c0d61141b565b1a60f81b828281518110610c2357610c2361141b565b60200101906001600160f81b031916908160001a90535060049490941c93610c4a816117f6565b9050610bdc565b508315610ca05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016101af565b9392505050565b60608282604051602001610cbc92919061180d565b604051602081830303815290604052905092915050565b60608151600003610cf257505060408051602081019091526000815290565b60006040518060600160405280604081526020016119cf6040913990506000600384516002610d2191906117bf565b610d2b9190611780565b610d369060046117d7565b90506000610d458260206117bf565b67ffffffffffffffff811115610d5d57610d5d611600565b6040519080825280601f01601f191660200182016040528015610d87576020820181803683370190505b509050818152600183018586518101602084015b81831015610df3576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825350600101610d9b565b600389510660018114610e0d5760028114610e1e57610e2a565b613d3d60f01b600119830152610e2a565b603d60f81b6000198301525b509398975050505050505050565b60606000805b600354811015610ef757600060038281548110610e5d57610e5d61141b565b6000918252602090912001546040516302ec2f6d60e11b81526001600160a01b038781166004830152909116915081906305d85eda90602401602060405180830381865afa158015610eb3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed79190611402565b610ee190846117bf565b9250508080610eef90611751565b915050610e3e565b5060008167ffffffffffffffff811115610f1357610f13611600565b604051908082528060200260200182016040528015610f4657816020015b6060815260200190600190039081610f315790505b50905060008267ffffffffffffffff811115610f6457610f64611600565b604051908082528060200260200182016040528015610f9757816020015b6060815260200190600190039081610f825790505b5090506000805b6003548110156110e357600060038281548110610fbd57610fbd61141b565b6000918252602082200154604051631c13359160e11b81526001600160a01b038b811660048301529091169250819083906338266b2290602401600060405180830381865afa158015611014573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261103c919081019061192f565b9092509050845b888110156110cc5782818151811061105d5761105d61141b565b60200260200101518882815181106110775761107761141b565b60200260200101819052508181815181106110945761109461141b565b60200260200101518782815181106110ae576110ae61141b565b602002602001018190525080806110c490611751565b915050611043565b5050505080806110db90611751565b915050610f9e565b506110ee83836110f8565b9695505050505050565b60408051602081019091526000808252606091905b84518110156111ab57600084828151811061112a5761112a61141b565b6020026020010151511115611199578161117686838151811061114f5761114f61141b565b60200260200101518684815181106111695761116961141b565b6020026020010151610ca7565b604051602001611187929190611993565b60405160208183030381529060405291505b806111a381611751565b91505061110d565b509392505050565b60405180610100016040528060608152602001606081526020016060815260200160608152602001606081526020016060815260200160608152602001606081525090565b6001600160a01b038116811461048457600080fd5b60006020828403121561121f57600080fd5b8135610ca0816111f8565b60005b8381101561124557818101518382015260200161122d565b83811115611254576000848401525b50505050565b6000815180845261127281602086016020860161122a565b601f01601f19169290920160200192915050565b60208152600082516101008060208501526112a561012085018361125a565b91506020850151601f19808685030160408701526112c3848361125a565b935060408701519150808685030160608701526112e0848361125a565b935060608701519150808685030160808701526112fd848361125a565b935060808701519150808685030160a087015261131a848361125a565b935060a08701519150808685030160c0870152611337848361125a565b935060c08701519150808685030160e0870152611354848361125a565b935060e08701519150808685030183870152506110ee838261125a565b6000806040838503121561138457600080fd5b823591506020830135611396816111f8565b809150509250929050565b6000602082840312156113b357600080fd5b5035919050565b602081526000610ca0602083018461125a565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561141457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000815161144381856020860161122a565b9290920192915050565b68436974697a656e202360b81b81526000825161147181600985016020870161122a565b9190910160090192915050565b60006020828403121561149057600080fd5b8151610ca0816111f8565b600083516114ad81846020880161122a565b8351908301906114c181836020880161122a565b01949350505050565b673d913730b6b2911d60c11b8152601160f91b600882015284516000906114f8816009850160208a0161122a565b61088b60f21b6009918401918201526d113232b9b1b934b83a34b7b7111d60911b600b82015261152e60198201601160f91b9052565b61153b601a820187611431565b61088b60f21b81529050671134b6b0b3b2911d60c11b6002820152601160f91b600a82015261156d600b820186611431565b61088b60f21b815290506e2261747472696275746573223a205b60881b600282015261159c6011820185611431565b605d60f81b8152607d60f81b6001820152600201979650505050505050565b7f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000008152600082516115f381601d85016020870161122a565b91909101601d0192915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561163f5761163f611600565b604052919050565b600082601f83011261165857600080fd5b815167ffffffffffffffff81111561167257611672611600565b611685601f8201601f1916602001611616565b81815284602083860101111561169a57600080fd5b610afc82602083016020870161122a565b6000602082840312156116bd57600080fd5b815167ffffffffffffffff8111156116d457600080fd5b610afc84828501611647565b6000806000606084860312156116f557600080fd5b83519250602084015167ffffffffffffffff81111561171357600080fd5b61171f86828701611647565b9250506040840151611730816111f8565b809150509250925092565b634e487b7160e01b600052601160045260246000fd5b6000600182016117635761176361173b565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261178f5761178f61176a565b500490565b6000828210156117a6576117a661173b565b500390565b6000826117ba576117ba61176a565b500690565b600082198211156117d2576117d261173b565b500190565b60008160001904831182151516156117f1576117f161173b565b500290565b6000816118055761180561173b565b506000190190565b6e3d913a3930b4ba2fba3cb832911d1160891b8152825160009061183881600f85016020880161122a565b61088b60f21b600f9184019182015267113b30b63ab2911d60c11b6011820152601160f91b6019820152835161187581601a84016020880161122a565b61227d60f01b601a9290910191820152601c01949350505050565b600082601f8301126118a157600080fd5b8151602067ffffffffffffffff808311156118be576118be611600565b8260051b6118cd838201611616565b93845285810183019383810190888611156118e757600080fd5b84880192505b85831015611923578251848111156119055760008081fd5b6119138a87838c0101611647565b83525091840191908401906118ed565b98975050505050505050565b6000806040838503121561194257600080fd5b825167ffffffffffffffff8082111561195a57600080fd5b61196686838701611890565b9350602085015191508082111561197c57600080fd5b5061198985828601611890565b9150509250929050565b600083516119a581846020880161122a565b8351908301906119b981836020880161122a565b600b60fa1b910190815260010194935050505056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122006e0d6389c038701ca6791370f64168bebe93dcf3091dff32564bf81996e1ccc64736f6c634300080f0033";

type CitizenMetadataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CitizenMetadataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CitizenMetadata__factory extends ContractFactory {
  constructor(...args: CitizenMetadataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "CitizenMetadata";
  }

  deploy(
    _svgColor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CitizenMetadata> {
    return super.deploy(_svgColor, overrides || {}) as Promise<CitizenMetadata>;
  }
  getDeployTransaction(
    _svgColor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_svgColor, overrides || {});
  }
  attach(address: string): CitizenMetadata {
    return super.attach(address) as CitizenMetadata;
  }
  connect(signer: Signer): CitizenMetadata__factory {
    return super.connect(signer) as CitizenMetadata__factory;
  }
  static readonly contractName: "CitizenMetadata";
  public readonly contractName: "CitizenMetadata";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CitizenMetadataInterface {
    return new utils.Interface(_abi) as CitizenMetadataInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): CitizenMetadata {
    return new Contract(address, _abi, signerOrProvider) as CitizenMetadata;
  }
}
