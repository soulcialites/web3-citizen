{"version":3,"file":"core-wagmi.esm.js","sources":["../../../node_modules/.pnpm/style-inject@0.3.0/node_modules/style-inject/dist/style-inject.es.js","../src/constants.ts","../src/hooks/useCitizenAlphaRead.tsx","../src/Citizen/CitizenLink.tsx","../src/InputWithLabel.tsx","../src/Citizen/FormCitizenEnsUpdate.tsx","../src/hooks/useNotaryWrite.tsx","../src/hooks/useLogError.tsx","../src/hooks/useLogTransactionWrite.tsx","../src/Citizen/FormCitizenIssue.tsx","../src/hooks/useNationWrite.tsx","../src/Citizen/FormCitizenRevoke.tsx","../src/Nation/NationFormDisableRole.tsx","../src/Nation/NationFormEnableRole.tsx","../src/InputWithSideLabel.tsx","../src/Nation/NationFormHasRole.tsx","../src/Nation/NationFormRoleGrant.tsx","../src/Nation/NationFormRoleRevoke.tsx","../src/hooks/useNationRead.tsx","../src/Nation/NationRoleAdminRole.tsx","../src/Nation/NationFormIsFounder.tsx","../src/Nation/NationHasRole.tsx","../src/Nation/NationRoleStatus.tsx","../src/Nation/NationIsFounder.tsx","../src/hooks/useNotaryRead.tsx","../src/Notary/NotaryIsNotary.tsx","../src/Notary/NotaryFormIsNotary.tsx","../src/Notary/NotaryFormGrantPermissions.tsx","../src/Notary/NotaryFormRevokePermissions.tsx","../src/hooks/useNotaryServiceDelegatableWrite.tsx","../src/NotaryServiceDelegatable/NotaryServiceDelegatableFormClaim.tsx","../src/hooks/useNotaryServiceDelegatableContract.tsx","../src/utils/types.ts","../src/utils/createDelegation.ts","../src/utils/createIntention.ts","../src/NotaryServiceDelegatable/NotaryServiceDelegatableFormClaimDelegate.tsx","../src/NotaryServiceDelegatable/NotaryServiceDelegatableFormClaimInvocation.tsx","../src/hooks/useTrustTokenWrite.tsx","../src/experiments/TrustTokenClaim.tsx","../src/hooks/useCitizenGetMetadata.tsx","../src/hooks/useCitizenAlphaWrite.tsx","../src/hooks/useNotaryContract.tsx","../src/hooks/useNationContract.tsx","../src/hooks/useTrustTokenRead.tsx","../src/hooks/useTrustTokenContract.tsx","../src/hooks/useNotaryServiceDelegatableRead.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import { utils } from 'ethers';\n\nexport const NOTARY = utils.keccak256(utils.toUtf8Bytes('NOTARY'));\nexport const FOUNDER = utils.keccak256(utils.toUtf8Bytes('FOUNDER'));\nexport const TREASURY = utils.keccak256(utils.toUtf8Bytes('TREASURY'));\nexport const LABS = utils.keccak256(utils.toUtf8Bytes('LABS'));\n\nexport const lookup = {\n  NOTARY: NOTARY,\n  FOUNDER: FOUNDER,\n  TREASURY: TREASURY,\n  LABS: LABS,\n};\n\nexport const reverseLookup = {\n  '0x0000000000000000000000000000000000000000000000000000000000000000': 'ADMIN',\n  [NOTARY]: 'NOTARY',\n  [FOUNDER]: 'FOUNDER',\n  [TREASURY]: 'TREASURY',\n  [LABS]: 'LABS',\n};\n\nconst constants = {\n  NOTARY,\n  FOUNDER,\n};\n\nexport default constants;\n","import { useContractRead } from 'wagmi';\nimport CitizenAlpha from '@web3-citizen/core-sol/abis/contracts/CitizenAlpha.sol/CitizenAlpha.json';\n\nexport function useCitizenAlphaRead(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractRead(\n    {\n      addressOrName: address,\n      contractInterface: CitizenAlpha,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useCitizenAlphaRead;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport useCitizenAlphaContractRead from '../hooks/useCitizenAlphaRead';\nimport { Address } from '@turbo-eth/core-wagmi';\ninterface CitizenLinkProps {\n  className?: string;\n  contractAddress: string;\n  address?: string;\n}\n\nexport const CitizenLink = ({\n  className,\n  contractAddress,\n  address,\n}: CitizenLinkProps) => {\n  const classes = classNames(className, 'CitizenLink');\n  const { data, isError, isLoading } = useCitizenAlphaContractRead(\n    contractAddress,\n    'getLink',\n    [address]\n  );\n  if (isError || isLoading) return null;\n  return <Address className={classes} address={data} truncate />;\n};\n\nexport default CitizenLink;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\ninterface InputWithLabelProps {\n  className?: string;\n  label?: string;\n  register: Function;\n  required?: boolean;\n  name?: string;\n  placeholder?: string;\n  type?: string;\n}\n\nexport const InputWithLabel = ({\n  className,\n  name,\n  label,\n  register,\n  required = false,\n  placeholder,\n  type,\n}: InputWithLabelProps) => {\n  const containerClassName = classNames(className, 'InputWithLabel');\n  return (\n    <div className={containerClassName}>\n      <label>\n        <span className=\"text-sm font-semibold\">{label}</span>\n      </label>\n      <input\n        className=\"input\"\n        type={type}\n        placeholder={placeholder}\n        {...register(name, { required })}\n      />\n    </div>\n  );\n};\n\nexport default InputWithLabel;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport InputWithLabel from '../InputWithLabel';\nimport {\n  useResolverContractWrite,\n  useResolverContract,\n} from '@turbo-eth/ens-wagmi';\n// import { useEnsResolver } from 'wagmi'\ninterface FormCitizenEnsUpdateProps {\n  className?: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n  ensNode: string;\n  defaultValues?: any;\n}\n\nexport const FormCitizenEnsUpdate = ({\n  className,\n  onUpdate,\n  contractAddress,\n  ensNode,\n  defaultValues = {\n    url: '',\n    description: '',\n    did: '',\n    ['com.twitter']: '',\n    ['com.github']: '',\n  },\n}: FormCitizenEnsUpdateProps) => {\n  const styleForm = classNames(className, 'FormCitizenEnsUpdate');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: defaultValues,\n  });\n  const watchAllFields = watch();\n  const contractResolver = useResolverContract(contractAddress);\n  const [inputs, setInputs] = React.useState<any>();\n  const { write } = useResolverContractWrite(contractAddress, 'multicall', [\n    inputs,\n  ]);\n\n  const onSubmit = async (_data: any) => {\n    const url_ = await contractResolver.populateTransaction.setText(\n      ensNode,\n      'url',\n      watchAllFields.description\n    );\n    const avatar_ = await contractResolver.populateTransaction.setText(\n      ensNode,\n      'avatar',\n      watchAllFields.description\n    );\n    const did_ = await contractResolver.populateTransaction.setText(\n      ensNode,\n      'did',\n      watchAllFields.description\n    );\n    const description_ = await contractResolver.populateTransaction.setText(\n      ensNode,\n      'description',\n      watchAllFields.description\n    );\n    setInputs([url_.data, avatar_.data, did_.data, description_.data]);\n    if (onUpdate) onUpdate(_data);\n  };\n\n  React.useEffect(() => {\n    if (inputs) {\n      write();\n    }\n  }, [inputs]);\n\n  return (\n    <div className={styleForm}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"mb-4\">\n          <InputWithLabel\n            name=\"url\"\n            label=\"URL\"\n            placeholder=\"www.site.me\"\n            register={register}\n          />\n          <InputWithLabel\n            name=\"avatar\"\n            label=\"Avatar\"\n            placeholder=\"ipfs://\"\n            register={register}\n          />\n          <InputWithLabel\n            name=\"did\"\n            label=\"Decentralized Identifier (DID)\"\n            placeholder=\"did:eth:0x000...000\"\n            register={register}\n          />\n          <InputWithLabel\n            name=\"description\"\n            label=\"Description\"\n            placeholder=\"I am...\"\n            register={register}\n          />\n          <InputWithLabel\n            name=\"com.twitter\"\n            label=\"Twitter\"\n            placeholder=\"\"\n            register={register}\n          />\n          <InputWithLabel\n            name=\"com.github\"\n            label=\"Github\"\n            placeholder=\"\"\n            register={register}\n          />\n          <InputWithLabel\n            name=\"notice\"\n            label=\"Notice\"\n            placeholder=\"\"\n            register={register}\n          />\n        </div>\n        <button className=\"btn btn-blue btn-sm w-full mt-6\" type=\"submit\">\n          Update\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormCitizenEnsUpdate;\n","import { useContractWrite } from 'wagmi';\nimport Notary from '@web3-citizen/core-sol/abis/contracts/Notary/Notary.sol/Notary.json';\n\nexport function useNotaryWrite(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractWrite(\n    {\n      addressOrName: address,\n      contractInterface: Notary,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useNotaryWrite;\n","import { useEffect } from 'react';\n\nexport function useLogError(error: string): any {\n  useEffect(() => {\n    // console.log(error);\n  }, [error]);\n}\n\nexport default useLogError;\n","import { useEffect } from 'react';\n\nexport function useLogTransactionWrite(data: string): any {\n  useEffect(() => {\n    // console.log(data);\n  }, [data]);\n}\n\nexport default useLogTransactionWrite;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNotaryWrite } from '../hooks/useNotaryWrite';\nimport InputWithLabel from '../InputWithLabel';\nimport { useLogError } from '../hooks';\n\ninterface FormCitizenIssueProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const FormCitizenIssue = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: FormCitizenIssueProps) => {\n  const styleForm = classNames(className, 'FormCitizenIssue');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      to: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error } = useNotaryWrite(contractAddress, 'issue', [\n    watchAllFields?.to,\n  ]);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n  useLogError(error);\n\n  return (\n    <div className={styleForm}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"mt-4\">\n          <InputWithLabel\n            name=\"to\"\n            label=\"Citizen\"\n            placeholder=\"vitalik.eth\"\n            register={register}\n          />\n        </div>\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\nFormCitizenIssue.defaultProps = {\n  label: 'Issue Citizenship',\n};\nexport default FormCitizenIssue;\n","import { useContractWrite } from 'wagmi';\nimport Nation from '@web3-citizen/core-sol/abis/contracts/Nation/Nation.sol/Nation.json';\n\nexport function useNationWrite(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractWrite(\n    {\n      addressOrName: address,\n      contractInterface: Nation,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useNationWrite;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport InputWithLabel from '../InputWithLabel';\n\ninterface FormCitizenRevokeProps {\n  className?: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const FormCitizenRevoke = ({\n  className,\n  onUpdate,\n  contractAddress,\n}: FormCitizenRevokeProps) => {\n  const styleForm = classNames(className, 'FormCitizenRevoke');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      from: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write } = useNationWrite(contractAddress, 'revoke', [\n    watchAllFields?.from,\n  ]);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={styleForm}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"mt-4\">\n          <InputWithLabel\n            name=\"from\"\n            label=\"Citizen\"\n            placeholder=\"vitalik.eth\"\n            register={register}\n          />\n        </div>\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          Revoke Citizenship\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default FormCitizenRevoke;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { useLogError, useLogTransactionWrite } from '../hooks';\nimport { utils } from 'ethers';\n\ninterface NationFormDisableRoleProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NationFormDisableRole = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NationFormDisableRoleProps) => {\n  const classes_ = classNames(className, 'NationFormDisableRole');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      role: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(\n    contractAddress,\n    'disableRole',\n    [utils.keccak256(utils.toUtf8Bytes(watchAllFields.role))]\n  );\n  useLogError(error);\n  useLogTransactionWrite(data);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label className=\"label my-2 block\">Role</label>\n        <input\n          className=\"input\"\n          placeholder=\"LABS\"\n          {...register('role', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNationFormDisableRole.defaultProps = {\n  label: 'Disable Role',\n};\n\nexport default NationFormDisableRole;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { useLogError, useLogTransactionWrite } from '../hooks';\nimport { utils } from 'ethers';\n\ninterface NationFormEnableRoleProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NationFormEnableRole = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NationFormEnableRoleProps) => {\n  const classes_ = classNames(className, 'NationFormEnableRole');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      role: '',\n      adminRole: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(contractAddress, 'enableRole', [\n    utils.keccak256(utils.toUtf8Bytes(watchAllFields.role)),\n    utils.keccak256(utils.toUtf8Bytes(watchAllFields.adminRole)),\n  ]);\n  useLogError(error);\n  useLogTransactionWrite(data);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label className=\"label my-2 block\">Role</label>\n        <input\n          className=\"input\"\n          placeholder=\"TREASURY\"\n          {...register('role', { required: true })}\n        />\n        <label className=\"label my-2 block\">Admin Role</label>\n        <input\n          className=\"input\"\n          placeholder=\"FOUNDER\"\n          {...register('adminRole', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNationFormEnableRole.defaultProps = {\n  label: 'Enable Role',\n};\n\nexport default NationFormEnableRole;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\ninterface InputWithSideLabelProps {\n  className?: string;\n  label?: string;\n  register: Function;\n  required?: boolean;\n  name?: string;\n  placeholder?: string;\n  type?: string;\n}\n\nexport const InputWithSideLabel = ({\n  className,\n  name,\n  label,\n  register,\n  required = false,\n  placeholder,\n  type,\n}: InputWithSideLabelProps) => {\n  const containerClassName = classNames(\n    className,\n    'InputWithSideLabel flex items-center justify-center'\n  );\n  return (\n    <div className={containerClassName}>\n      <input\n        className=\"input col-span-8\"\n        type={type}\n        placeholder={placeholder}\n        {...register(name, { required })}\n      />\n      <label className=\"bg-neutral-300 px-4 rounded-r-lg text-white dark:text-neutral-100 dark:bg-slate-800 self-stretch flex items-center justify-center\">\n        <span className=\"text-sm font-semibold p-2\">{label}</span>\n      </label>\n    </div>\n  );\n};\n\nexport default InputWithSideLabel;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { InputWithSideLabel } from '../InputWithSideLabel';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { useLogError } from '../hooks';\nimport { utils } from 'ethers';\n\ninterface NationFormHasRoleProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NationFormHasRole = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NationFormHasRoleProps) => {\n  const classes_ = classNames(className, 'NationFormHasRole');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n      role: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(contractAddress, 'hasRole', [\n    utils.keccak256(utils.toUtf8Bytes(watchAllFields.role)),\n    watchAllFields?.citizen,\n  ]);\n  useLogError(error);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-12 gap-x-4 w-full\">\n          <div className=\"col-span-8\">\n            <InputWithSideLabel\n              name=\"role\"\n              placeholder=\"FOUNDER\"\n              label=\"Role\"\n              register={register}\n            />\n            <InputWithSideLabel\n              name=\"citizen\"\n              className=\"mt-3\"\n              placeholder=\"vitalik.eth\"\n              label=\"Citizen\"\n              register={register}\n            />\n          </div>\n          <div className=\"col-span-4 bg-slate-700 rounded-md text-white flex items-center justify-center p-2\">\n            <span className=\"\">\n              <span className=\"font-semibold\">Status:</span>{' '}\n              {data ? 'Yes' : 'No'}\n            </span>\n          </div>\n        </div>\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNationFormHasRole.defaultProps = {\n  label: 'Check Status',\n};\n\nexport default NationFormHasRole;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { useLogError, useLogTransactionWrite } from '../hooks';\nimport { utils } from 'ethers';\n\ninterface NationFormRoleGrantProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NationFormRoleGrant = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NationFormRoleGrantProps) => {\n  const classes_ = classNames(className, 'NationFormRoleGrant');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n      role: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(contractAddress, 'grantRole', [\n    utils.keccak256(utils.toUtf8Bytes(watchAllFields.role)),\n    watchAllFields.citizen,\n  ]);\n  useLogError(error);\n  useLogTransactionWrite(data);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          placeholder=\"Nation\"\n          {...register('role', { required: true })}\n        />\n        <input\n          className=\"input mt-2\"\n          placeholder=\"web3oftrust.eth\"\n          {...register('citizen', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNationFormRoleGrant.defaultProps = {\n  label: 'Grant Role',\n};\n\nexport default NationFormRoleGrant;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { useLogError, useLogTransactionWrite } from '../hooks';\nimport { utils } from 'ethers';\n\ninterface NationFormRoleRevokeProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NationFormRoleRevoke = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NationFormRoleRevokeProps) => {\n  const classes_ = classNames(className, 'NationFormRoleRevoke');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n      role: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(contractAddress, 'revokeRole', [\n    utils.keccak256(utils.toUtf8Bytes(watchAllFields.role)),\n    watchAllFields.citizen,\n  ]);\n  useLogError(error);\n  useLogTransactionWrite(data);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          placeholder=\"Nation\"\n          {...register('role', { required: true })}\n        />\n        <input\n          className=\"input mt-2\"\n          placeholder=\"web3oftrust.eth\"\n          {...register('citizen', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNationFormRoleRevoke.defaultProps = {\n  label: 'Revoke Role',\n};\n\nexport default NationFormRoleRevoke;\n","import { useContractRead } from 'wagmi';\nimport Nation from '@web3-citizen/core-sol/abis/contracts/Nation/Nation.sol/Nation.json';\n\nexport function useNationRead(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractRead(\n    {\n      addressOrName: address,\n      contractInterface: Nation,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useNationRead;\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useNationRead } from '../hooks/useNationRead';\nimport { utils } from 'ethers';\nimport { useLogError } from '../hooks';\nimport { reverseLookup } from '../constants';\n\ninterface NationRoleAdminRoleProps {\n  className?: string;\n  classNameLabel?: string;\n  label: string;\n  labelActive: boolean;\n  contractAddress?: string;\n  role: string;\n}\n\nexport const NationRoleAdminRole = ({\n  className,\n  contractAddress,\n  role,\n  classNameLabel,\n  label,\n  labelActive,\n}: NationRoleAdminRoleProps) => {\n  const classes_ = classNames(className, 'NationRoleAdminRole');\n\n  const { data, isError, error } = useNationRead(\n    contractAddress || '',\n    'getRoleAdmin',\n    [utils.keccak256(utils.toUtf8Bytes(role))]\n  );\n  useLogError(error);\n  const [roleReverseLookup, setRoleReverseLookup] = useState<string>('');\n  useEffect(() => {\n    // @ts-ignore\n    setRoleReverseLookup(reverseLookup[data || '']);\n  }, [data]);\n  if (isError) return null;\n\n  return (\n    <span className={classes_}>\n      <span className=\"\">\n        {labelActive && <span className={classNameLabel}>{label}</span>}\n        <span className=\"\">{roleReverseLookup}</span>\n      </span>\n    </span>\n  );\n};\n\nNationRoleAdminRole.defaultProps = {\n  labelActive: false,\n  label: 'AdminRole: ',\n};\n\nexport default NationRoleAdminRole;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { FOUNDER } from '../constants';\nimport { useLogError } from '../hooks';\nimport InputWithSideLabel from '../InputWithSideLabel';\n\ninterface NationFormIsFounderProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NationFormIsFounder = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NationFormIsFounderProps) => {\n  const classes_ = classNames(className, 'NationFormIsFounder');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(contractAddress, 'hasRole', [\n    FOUNDER,\n    watchAllFields?.citizen,\n  ]);\n  useLogError(error);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-12 gap-x-4 w-full\">\n          <div className=\"col-span-8\">\n            <InputWithSideLabel\n              name=\"citizen\"\n              placeholder=\"vitalik.eth\"\n              label=\"Citizen\"\n              register={register}\n            />\n          </div>\n          <div className=\"col-span-4 bg-slate-800 rounded-md text-white flex items-center justify-center p-2\">\n            <span className=\"\">\n              <span className=\"font-semibold\">Status:</span>{' '}\n              {data ? 'Yes' : 'No'}\n            </span>\n          </div>\n        </div>\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNationFormIsFounder.defaultProps = {\n  label: 'Check Status',\n};\n\nexport default NationFormIsFounder;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useNationRead } from '../hooks/useNationRead';\n\ninterface NationHasRoleProps {\n  className?: string;\n  contractAddress?: string;\n  userAddress?: string;\n  role?: string;\n}\n\nexport const NationHasRole = ({\n  className,\n  contractAddress,\n  userAddress,\n  role,\n}: NationHasRoleProps) => {\n  const containerClassName = classNames(className, 'NationHasRole');\n\n  const { data, isError } = useNationRead(contractAddress || '', 'hasRole', [\n    role,\n    userAddress,\n  ]);\n\n  if (isError) return null;\n\n  return <div className={containerClassName}>{data}</div>;\n};\n\nexport default NationHasRole;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useNationRead } from '../hooks/useNationRead';\nimport { utils } from 'ethers';\n\ninterface NationRoleStatusProps {\n  className?: string;\n  classNameLabel?: string;\n  roleActive?: boolean;\n  label: string;\n  labelActive: boolean;\n  labelTrue: string;\n  labelFalse: string;\n  contractAddress?: string;\n  role?: string;\n}\n\nexport const NationRoleStatus = ({\n  className,\n  contractAddress,\n  role,\n  classNameLabel,\n  roleActive,\n  label,\n  labelActive,\n  labelTrue,\n  labelFalse,\n}: NationRoleStatusProps) => {\n  const classes_ = classNames(className, 'NationRoleStatus');\n\n  const { data, isError } = useNationRead(contractAddress || '', 'roleStatus', [\n    utils.keccak256(utils.toUtf8Bytes(role || '')),\n  ]);\n\n  if (isError) return null;\n\n  return (\n    <span className={classes_}>\n      <span className=\"\">\n        {roleActive && <span className=\"\">role</span>}{' '}\n        {labelActive && <span className={classNameLabel}>{label}</span>}{' '}\n      </span>\n      {data ? labelTrue : labelFalse}\n    </span>\n  );\n};\n\nNationRoleStatus.defaultProps = {\n  labelActive: false,\n  label: 'Status: ',\n  labelTrue: 'Enabled',\n  labelFalse: 'Disabled',\n};\n\nexport default NationRoleStatus;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useNationRead } from '../hooks/useNationRead';\nimport { FOUNDER } from '../constants';\n\ninterface NationIsFounderProps {\n  className?: string;\n  classNameLabel?: string;\n  label: string;\n  labelActive: boolean;\n  labelTrue: string;\n  labelFalse: string;\n  contractAddress?: string;\n  userAddress?: string;\n}\n\nexport const NationIsFounder = ({\n  className,\n  classNameLabel,\n  contractAddress,\n  userAddress,\n  label,\n  labelActive,\n  labelTrue,\n  labelFalse,\n}: NationIsFounderProps) => {\n  const classes_ = classNames(className, 'NationIsFounder');\n\n  const { data, isError } = useNationRead(contractAddress || '', 'hasRole', [\n    FOUNDER,\n    userAddress,\n  ]);\n\n  if (isError) return null;\n\n  return (\n    <span className={classes_}>\n      {labelActive && <span className={classNameLabel}>{label}</span>}{' '}\n      {data ? labelTrue : labelFalse}\n    </span>\n  );\n};\n\nNationIsFounder.defaultProps = {\n  labelActive: false,\n  label: 'Founder: ',\n  labelTrue: 'true',\n  labelFalse: 'false',\n};\n\nexport default NationIsFounder;\n","import { useContractRead } from 'wagmi';\nimport Notary from '@web3-citizen/core-sol/abis/contracts/Notary/Notary.sol/Notary.json';\n\nexport function useNotaryRead(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractRead(\n    {\n      addressOrName: address,\n      contractInterface: Notary,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useNotaryRead;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useNotaryRead } from '../hooks/useNotaryRead';\nimport { NOTARY } from '../constants';\n\ninterface NotaryIsNotaryProps {\n  className?: string;\n  labelTrue: string;\n  labelFalse: string;\n  contractAddress?: string;\n  userAddress?: string;\n}\n\nexport const NotaryIsNotary = ({\n  className,\n  contractAddress,\n  userAddress,\n  labelTrue,\n  labelFalse,\n}: NotaryIsNotaryProps) => {\n  const containerClassName = classNames(className, 'NotaryHasRole');\n\n  const { data, isError } = useNotaryRead(contractAddress || '', 'hasRole', [\n    NOTARY,\n    userAddress,\n  ]);\n\n  if (isError) return null;\n\n  return (\n    <div className={containerClassName}>\n      Notary: {data ? labelTrue : labelFalse}\n    </div>\n  );\n};\n\nNotaryIsNotary.defaultProps = {\n  labelTrue: 'Yes',\n  labelFalse: 'No',\n};\n\nexport default NotaryIsNotary;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { NOTARY } from '../constants';\nimport { useLogError } from '../hooks';\n\ninterface NotaryFormIsNotaryProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NotaryFormIsNotary = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NotaryFormIsNotaryProps) => {\n  const classes_ = classNames(className, 'NotaryFormIsNotary');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error, data } = useNationWrite(contractAddress, 'hasRole', [\n    NOTARY,\n    watchAllFields?.citizen,\n  ]);\n  useLogError(error);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-12 gap-x-4 w-full\">\n          <div className=\"col-span-8\">\n            <input\n              className=\"input\"\n              placeholder=\"weboftrust.eth\"\n              {...register('citizen', { required: true })}\n            />\n          </div>\n          <div className=\"col-span-4 bg-neutral-900 flex items-center justify-center p-2\">\n            <span className=\"\">\n              <span className=\"font-semibold\">Status:</span>{' '}\n              {data ? 'Yes' : 'No'}\n            </span>\n          </div>\n        </div>\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNotaryFormIsNotary.defaultProps = {\n  label: 'Check Status',\n};\n\nexport default NotaryFormIsNotary;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { NOTARY } from '../constants';\nimport { useLogError } from '../hooks';\n\ninterface NotaryFormGrantPermissionsProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NotaryFormGrantPermissions = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NotaryFormGrantPermissionsProps) => {\n  const classes_ = classNames(className, 'NotaryFormGrantPermissions');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error } = useNationWrite(contractAddress, 'grantRole', [\n    NOTARY,\n    watchAllFields?.citizen,\n  ]);\n  useLogError(error);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          placeholder=\"weboftrust.eth\"\n          {...register('citizen', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNotaryFormGrantPermissions.defaultProps = {\n  label: 'Grant Notary Status',\n};\n\nexport default NotaryFormGrantPermissions;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNationWrite } from '../hooks/useNationWrite';\nimport { NOTARY } from '../constants';\nimport { useLogError } from '../hooks';\n\ninterface NotaryFormRevokePermissionsProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\n\nexport const NotaryFormRevokePermissions = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NotaryFormRevokePermissionsProps) => {\n  const classes_ = classNames(className, 'NotaryFormRevokePermissions');\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      citizen: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write, error } = useNationWrite(contractAddress, 'revokeRole', [\n    NOTARY,\n    watchAllFields?.citizen,\n  ]);\n  useLogError(error);\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          placeholder=\"weboftrust.eth\"\n          {...register('citizen', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNotaryFormRevokePermissions.defaultProps = {\n  label: 'Revoke Notary Status',\n};\n\nexport default NotaryFormRevokePermissions;\n","import { useContractWrite } from 'wagmi';\nimport NotaryServiceDelegatable from '@web3-citizen/core-sol/abis/contracts/Notary/NotaryServiceDelegatable.sol/NotaryServiceDelegatable.json';\n\nexport function useNotaryServiceDelegatableWrite(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractWrite(\n    {\n      addressOrName: address,\n      contractInterface: NotaryServiceDelegatable,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useNotaryServiceDelegatableWrite;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport useNotaryServiceDelegatableWrite from '../hooks/useNotaryServiceDelegatableWrite';\n\ninterface NotaryServiceDelegatableFormClaimProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\nexport const NotaryServiceDelegatableFormClaim = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NotaryServiceDelegatableFormClaimProps) => {\n  const classes_ = classNames(className, 'NotaryServiceDelegatableFormClaim');\n  const {\n    watch,\n    register,\n    handleSubmit,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      to: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write } = useNotaryServiceDelegatableWrite(contractAddress, 'claim', [\n    watchAllFields.to,\n  ]);\n\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          placeholder=\"0x0\"\n          {...register('to', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNotaryServiceDelegatableFormClaim.defaultProps = {\n  label: 'Issue Claim',\n};\n\nexport default NotaryServiceDelegatableFormClaim;\n","import { useContract } from 'wagmi';\nimport NotaryServiceDelegatable from '@web3-citizen/core-sol/abis/contracts/Notary/NotaryServiceDelegatable.sol/NotaryServiceDelegatable.json';\n\nexport function useNotaryServiceDelegatableContract(address: string): any {\n  return useContract({\n    addressOrName: address,\n    contractInterface: NotaryServiceDelegatable,\n  });\n}\n\nexport default useNotaryServiceDelegatableContract;\n","export const domain = {\n  name: 'NotaryServiceDelegatable',\n  version: '1',\n  chainId: 1,\n};\n\nexport const types = {\n  EIP712Domain: [\n    { name: 'name', type: 'string' },\n    { name: 'version', type: 'string' },\n    { name: 'chainId', type: 'uint256' },\n    { name: 'verifyingContract', type: 'address' },\n  ],\n  Invocation: [\n    { name: 'transaction', type: 'Transaction' },\n    { name: 'authority', type: 'SignedDelegation[]' },\n  ],\n  Invocations: [\n    { name: 'batch', type: 'Invocation[]' },\n    { name: 'replayProtection', type: 'ReplayProtection' },\n  ],\n  SignedInvocation: [\n    { name: 'invocations', type: 'Invocations' },\n    { name: 'signature', type: 'bytes' },\n  ],\n  Transaction: [\n    { name: 'to', type: 'address' },\n    { name: 'gasLimit', type: 'uint256' },\n    { name: 'data', type: 'bytes' },\n  ],\n  ReplayProtection: [\n    { name: 'nonce', type: 'uint' },\n    { name: 'queue', type: 'uint' },\n  ],\n  Delegation: [\n    { name: 'delegate', type: 'address' },\n    { name: 'authority', type: 'bytes32' },\n    { name: 'caveats', type: 'Caveat[]' },\n  ],\n  Caveat: [\n    { name: 'enforcer', type: 'address' },\n    { name: 'terms', type: 'bytes' },\n  ],\n  SignedDelegation: [\n    { name: 'delegation', type: 'Delegation' },\n    { name: 'signature', type: 'bytes' },\n  ],\n  IntentionToRevoke: [{ name: 'delegationHash', type: 'bytes32' }],\n  SignedIntentionToRevoke: [\n    { name: 'signature', type: 'bytes' },\n    { name: 'intentionToRevoke', type: 'IntentionToRevoke' },\n  ],\n};\n\nexport const typedMessage = {\n  primaryType: 'Delegation',\n  domain: {\n    name: 'NotaryServiceDelegatable',\n    version: '1',\n  },\n\n  entries: {\n    delegate: 'address',\n    caveat: 'Caveat',\n    authority: 'SignedDelegation',\n  },\n};\n\nexport default {\n  domain,\n  types,\n  typedMessage,\n};\n","import { domain, types } from './types';\n\nexport function createDelegation(to: string, verifyingContract: string) {\n  const delegation = {\n    delegate: to,\n    authority:\n      '0x0000000000000000000000000000000000000000000000000000000000000000',\n    caveats: [],\n  };\n\n  const delegationString = JSON.stringify({\n    domain: { ...domain, verifyingContract: verifyingContract },\n    message: delegation,\n    primaryType: 'Delegation',\n    types: types,\n  });\n  return {\n    delegation,\n    string: delegationString,\n  };\n}\n","import { domain, types } from './types';\n\nexport function createIntention(\n  delegation: any,\n  signedDelegation: any,\n  verifyingContract: string,\n  tx: string\n) {\n  const intention = {\n    replayProtection: {\n      nonce: '0x01',\n      queue: '0x00',\n    },\n    batch: [\n      {\n        authority: [\n          {\n            delegation: delegation,\n            signature: signedDelegation,\n          },\n        ],\n        transaction: {\n          to: verifyingContract,\n          gasLimit: '10000000000000000',\n          data: tx,\n        },\n      },\n    ],\n  };\n\n  const intentionString = JSON.stringify({\n    domain: { ...domain, verifyingContract: verifyingContract },\n    message: intention,\n    primaryType: 'Invocations',\n    types: types,\n  });\n\n  return {\n    intention: intention,\n    string: intentionString,\n  };\n}\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport { useNotaryServiceDelegatableContract } from '../hooks/useNotaryServiceDelegatableContract';\nimport { useSigner } from 'wagmi';\nimport { createDelegation } from '../utils/createDelegation';\nimport { createIntention } from '../utils/createIntention';\n// @ts-ignore\nconst { recoverDelegationSigner } = require('eth-delegatable-utils');\n\ninterface NotaryServiceDelegatableFormClaimDelegateProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\nexport const NotaryServiceDelegatableFormClaimDelegate = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NotaryServiceDelegatableFormClaimDelegateProps) => {\n  const classes_ = classNames(\n    className,\n    'NotaryServiceDelegatableFormClaimDelegate'\n  );\n  const signer = useSigner();\n  const {\n    register,\n    handleSubmit,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      to: '',\n    },\n  });\n  //   const watchAllFields = watch();\n  const contract = useNotaryServiceDelegatableContract(contractAddress);\n\n  //   useLogError(error);\n  const [signatures, setSignatures] = React.useState<any>();\n  const onSubmit = (_data: any) => {\n    (async () => {\n      const method = 'eth_signTypedData_v4';\n      const txPopulated = await contract.populateTransaction.issue(_data.to);\n      const me = await signer.data?.getAddress();\n      const delegation = createDelegation(_data.to, contractAddress);\n      // @ts-ignore\n      const signedDelegation1 = await signer.data?.provider?.send(method, [\n        me,\n        delegation.string,\n      ]);\n      const intention = createIntention(\n        delegation.delegation,\n        signedDelegation1,\n        contractAddress,\n        txPopulated.data\n      );\n      // @ts-ignore\n      const signedDelegation2 = await signer.data?.provider.send(method, [\n        me,\n        intention.string,\n      ]);\n      setSignatures({\n        delegation: signedDelegation1,\n        invocation: signedDelegation2,\n      });\n    })();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"input\"\n          placeholder=\"weboftrust.eth\"\n          {...register('to', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n      {signatures && (\n        <div className=\"text-sm\">\n          <span className=\"block break-all\">\n            Delegation: <br /> {signatures.delegation}\n          </span>\n          <span className=\"block break-all\">\n            Invocation: <br /> {signatures.invocation}\n          </span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nNotaryServiceDelegatableFormClaimDelegate.defaultProps = {\n  label: 'Sign Delegation & Invocations',\n};\n\nexport default NotaryServiceDelegatableFormClaimDelegate;\n","import * as React from 'react';\nimport { useForm } from 'react-hook-form';\nimport classNames from 'classnames';\nimport useNotaryServiceDelegatableWrite from '../hooks/useNotaryServiceDelegatableWrite';\nimport { useAccount } from 'wagmi';\n\ninterface NotaryServiceDelegatableFormClaimInvocationProps {\n  className?: string;\n  label: string;\n  onUpdate?: Function;\n  defaults?: any;\n  contractAddress: string;\n}\nexport const NotaryServiceDelegatableFormClaimInvocation = ({\n  className,\n  label,\n  onUpdate,\n  contractAddress,\n}: NotaryServiceDelegatableFormClaimInvocationProps) => {\n  const classes_ = classNames(\n    className,\n    'NotaryServiceDelegatableFormClaimInvocation'\n  );\n\n  const account = useAccount();\n\n  const {\n    watch,\n    register,\n    handleSubmit,\n    formState: {},\n  } = useForm({\n    defaultValues: {\n      delegation: '',\n      invocation: '',\n    },\n  });\n  const watchAllFields = watch();\n  const { write } = useNotaryServiceDelegatableWrite(\n    contractAddress,\n    'invoke',\n    [\n      [\n        {\n          invocations: {\n            replayProtection: {\n              nonce: '0x01',\n              queue: '0x00',\n            },\n            batch: [\n              {\n                authority: [\n                  {\n                    delegation: {\n                      delegate: account.data?.address,\n                      authority:\n                        '0x0000000000000000000000000000000000000000000000000000000000000000',\n                      caveats: [],\n                    },\n                    signature: watchAllFields.delegation,\n                  },\n                ],\n                transaction: {\n                  to: contractAddress,\n                  gasLimit: '10000000000000000',\n                  data: `0x71e928af000000000000000000000000${account.data?.address?.substring(\n                    2\n                  )}`,\n                },\n              },\n            ],\n          },\n          signature: watchAllFields?.invocation,\n        },\n      ],\n    ]\n  );\n\n  const onSubmit = (_data: any) => {\n    write();\n    if (onUpdate) onUpdate(_data);\n  };\n\n  return (\n    <div className={classes_}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label className=\"text-sm font-semibold my-2\">Delegation</label>\n        <input\n          className=\"input\"\n          placeholder=\"0x0\"\n          {...register('delegation', { required: true })}\n        />\n        <label className=\"text-sm font-semibold my-2\">Invocation</label>\n        <input\n          className=\"input\"\n          placeholder=\"0x0\"\n          {...register('invocation', { required: true })}\n        />\n        <button className=\"btn btn-default my-3 w-full\" type=\"submit\">\n          {label}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nNotaryServiceDelegatableFormClaimInvocation.defaultProps = {\n  label: 'Claim Citizenship',\n};\n\nexport default NotaryServiceDelegatableFormClaimInvocation;\n","import { useContractWrite } from 'wagmi';\nimport TrustToken from '@web3-citizen/core-sol/abis/contracts/experiments/TrustToken.sol/TrustToken.json';\n\nexport function useTrustTokenWrite(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractWrite(\n    {\n      addressOrName: address,\n      contractInterface: TrustToken,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useTrustTokenWrite;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport useTrustTokenContractWrite from '../hooks/useTrustTokenWrite';\n\ninterface TrustTokenClaimProps {\n  className?: string;\n  contractAddress: string;\n  address?: string;\n}\n\nexport const TrustTokenClaim = ({\n  className,\n  contractAddress,\n}: TrustTokenClaimProps) => {\n  const classes = classNames(className, 'TrustTokenClaim');\n  const { write } = useTrustTokenContractWrite(contractAddress, 'claim', []);\n  return (\n    <span onClick={write} className={classes}>\n      Claim PGP.alpha\n    </span>\n  );\n};\n\nexport default TrustTokenClaim;\n","import { useContractRead, useProvider } from 'wagmi';\nimport CitizenAlpha from '@web3-citizen/core-sol/abis/contracts/CitizenAlpha.sol/CitizenAlpha.json';\nimport { useEffect, useState } from 'react';\nimport { parseAvatarString } from '@turbo-eth/ens-wagmi';\n\nexport function useCitizenGetMetadata(\n  address: string,\n  walletAddress: string,\n  tokenId: string | number\n): any {\n  const provider = useProvider();\n  const { data } = useContractRead(\n    {\n      addressOrName: address,\n      contractInterface: CitizenAlpha,\n    },\n    'tokenURI',\n    {\n      args: [tokenId],\n    }\n  );\n\n  const [citizenData, setCitizenData] = useState<{\n    image: string;\n    name: string;\n    description: string;\n    traits: {\n      [key: string]: string;\n    };\n    attributes: Array<{\n      value: string;\n    }>;\n  }>();\n\n  useEffect(() => {\n    if (data) {\n      (async () => {\n        const json = Buffer.from(data.substring(29), 'base64').toString();\n        const result = JSON.parse(json);\n        if (result.image) {\n          result.img = await parseAvatarString(\n            walletAddress,\n            result.image,\n            provider\n          );\n        }\n        result.traits = {};\n        result.attributes.forEach((element: any) => {\n          result.traits = {\n            ...result.traits,\n            [element.trait_type]: element.value,\n          };\n        });\n        setCitizenData(result);\n      })();\n    }\n  }, [data]);\n\n  return citizenData;\n}\n\nexport default useCitizenGetMetadata;\n","import { useContractWrite } from 'wagmi';\nimport CitizenAlpha from '@web3-citizen/core-sol/abis/contracts/CitizenAlpha.sol/CitizenAlpha.json';\n\nexport function useCitizenAlphaWrite(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractWrite(\n    {\n      addressOrName: address,\n      contractInterface: CitizenAlpha,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useCitizenAlphaWrite;\n","import { useContract } from 'wagmi';\nimport Notary from '@web3-citizen/core-sol/abis/contracts/Notary/Notary.sol/Notary.json';\n\nexport function useNotaryContract(address: string): any {\n  return useContract({\n    addressOrName: address,\n    contractInterface: Notary,\n  });\n}\n\nexport default useNotaryContract;\n","import { useContract } from 'wagmi';\nimport Nation from '@web3-citizen/core-sol/abis/contracts/Nation/Nation.sol/Nation.json';\n\nexport function useNationContract(address: string): any {\n  return useContract({\n    addressOrName: address,\n    contractInterface: Nation,\n  });\n}\n\nexport default useNationContract;\n","import { useContractRead } from 'wagmi';\nimport TrustToken from '@web3-citizen/core-sol/abis/contracts/experiments/TrustToken.sol/TrustToken.json';\n\nexport function useTrustTokenRead(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractRead(\n    {\n      addressOrName: address,\n      contractInterface: TrustToken,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useTrustTokenRead;\n","import { useContract } from 'wagmi';\nimport TrustToken from '@web3-citizen/core-sol/abis/contracts/experiments/TrustToken.sol/TrustToken.json';\n\nexport function useTrustTokenContract(address: string): any {\n  return useContract({\n    addressOrName: address,\n    contractInterface: TrustToken,\n  });\n}\n\nexport default useTrustTokenContract;\n","import { useContractRead } from 'wagmi';\nimport NotaryServiceDelegatable from '@web3-citizen/core-sol/abis/contracts/Notary/NotaryServiceDelegatable.sol/NotaryServiceDelegatable.json';\n\nexport function useNotaryServiceDelegatableRead(\n  address: string,\n  method: string,\n  args: any[]\n): any {\n  return useContractRead(\n    {\n      addressOrName: address,\n      contractInterface: NotaryServiceDelegatable,\n    },\n    method,\n    {\n      args: args,\n    }\n  );\n}\n\nexport default useNotaryServiceDelegatableRead;\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","NOTARY","utils","keccak256","toUtf8Bytes","FOUNDER","TREASURY","LABS","lookup","reverseLookup","constants","useCitizenAlphaRead","address","method","args","useContractRead","addressOrName","contractInterface","CitizenAlpha","CitizenLink","className","contractAddress","classes","classNames","useCitizenAlphaContractRead","data","isError","isLoading","React","Address","truncate","InputWithLabel","name","label","register","required","placeholder","containerClassName","FormCitizenEnsUpdate","onUpdate","ensNode","defaultValues","url","description","did","styleForm","useForm","handleSubmit","watch","formState","watchAllFields","contractResolver","useResolverContract","inputs","setInputs","useResolverContractWrite","write","onSubmit","_data","populateTransaction","setText","url_","avatar_","did_","description_","useNotaryWrite","useContractWrite","Notary","useLogError","error","useEffect","useLogTransactionWrite","FormCitizenIssue","to","defaultProps","useNationWrite","Nation","FormCitizenRevoke","from","NationFormDisableRole","classes_","role","NationFormEnableRole","adminRole","InputWithSideLabel","NationFormHasRole","citizen","NationFormRoleGrant","NationFormRoleRevoke","useNationRead","NationRoleAdminRole","classNameLabel","labelActive","useState","roleReverseLookup","setRoleReverseLookup","NationFormIsFounder","NationHasRole","userAddress","NationRoleStatus","roleActive","labelTrue","labelFalse","NationIsFounder","useNotaryRead","NotaryIsNotary","NotaryFormIsNotary","NotaryFormGrantPermissions","NotaryFormRevokePermissions","useNotaryServiceDelegatableWrite","NotaryServiceDelegatable","NotaryServiceDelegatableFormClaim","useNotaryServiceDelegatableContract","useContract","domain","version","chainId","types","EIP712Domain","Invocation","Invocations","SignedInvocation","Transaction","ReplayProtection","Delegation","Caveat","SignedDelegation","IntentionToRevoke","SignedIntentionToRevoke","createDelegation","verifyingContract","delegation","delegate","authority","caveats","delegationString","JSON","stringify","message","primaryType","string","createIntention","signedDelegation","tx","intention","replayProtection","nonce","queue","batch","signature","transaction","gasLimit","intentionString","NotaryServiceDelegatableFormClaimDelegate","signer","useSigner","contract","signatures","setSignatures","issue","txPopulated","getAddress","me","provider","send","signedDelegation1","signedDelegation2","invocation","NotaryServiceDelegatableFormClaimInvocation","account","useAccount","invocations","substring","useTrustTokenWrite","TrustToken","TrustTokenClaim","useTrustTokenContractWrite","onClick","useCitizenGetMetadata","walletAddress","tokenId","useProvider","citizenData","setCitizenData","json","Buffer","toString","result","parse","image","parseAvatarString","img","traits","attributes","forEach","element","trait_type","value","useCitizenAlphaWrite","useNotaryContract","useNationContract","useTrustTokenRead","useTrustTokenContract","useNotaryServiceDelegatableRead"],"mappings":"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"}