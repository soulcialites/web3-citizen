{"code":"import * as React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { useNationContract } from '../hooks/useNationContract';\r\n// import { useNationWrite } from '../hooks/useNationWrite';\r\n// import { NOTARY } from '../constants';\r\n// import { useLogError } from '../hooks';\r\nimport { useSigner } from 'wagmi';\r\nexport const NotaryServiceDelegatableFormIssueClaim = ({ className, label, onUpdate, contractAddress, }) => {\r\n    const classes_ = classNames(className, 'NotaryServiceDelegatableFormIssueClaim');\r\n    const signer = useSigner();\r\n    const { register, handleSubmit, formState: {}, } = useForm({\r\n        defaultValues: {\r\n            to: '',\r\n        },\r\n    });\r\n    //   const watchAllFields = watch();\r\n    const contract = useNationContract(contractAddress);\r\n    //   useLogError(error);\r\n    const onSubmit = (_data) => {\r\n        (async () => {\r\n            const txPopulated = await contract.populateTransaction.claim(_data.to);\r\n            console.log(txPopulated, 'txPopulated');\r\n            console.log(signer.data);\r\n            // signer.data?.as()\r\n        })();\r\n        if (onUpdate)\r\n            onUpdate(_data);\r\n    };\r\n    return (React.createElement(\"div\", { className: classes_ },\r\n        React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit) },\r\n            React.createElement(\"div\", { className: \"grid grid-cols-12 gap-x-4 w-full\" },\r\n                React.createElement(\"input\", Object.assign({ className: \"input\", placeholder: \"weboftrust.eth\" }, register('to', { required: true })))),\r\n            React.createElement(\"button\", { className: \"btn btn-default my-3 w-full\", type: \"submit\" }, label))));\r\n};\r\nNotaryServiceDelegatableFormIssueClaim.defaultProps = {\r\n    label: 'Issue Claim',\r\n};\r\nexport default NotaryServiceDelegatableFormIssueClaim;\r\n//# sourceMappingURL=NotaryServiceDelegatableFormIssueClaim.js.map","references":["/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/react-hook-form@7.32.2_react@18.2.0/node_modules/react-hook-form/dist/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/hooks/useNationContract.tsx","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/wagmi@0.4.12_2pvqx3wni2imkaucnfdtyrjuiq/node_modules/wagmi/dist/wagmi.cjs.d.ts"],"map":"{\"version\":3,\"file\":\"NotaryServiceDelegatableFormIssueClaim.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/NotaryServiceDelegatable/NotaryServiceDelegatableFormIssueClaim.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAC/D,4DAA4D;AAC5D,yCAAyC;AACzC,0CAA0C;AAC1C,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAUlC,MAAM,CAAC,MAAM,sCAAsC,GAAG,CAAC,EACrD,SAAS,EACT,KAAK,EACL,QAAQ,EACR,eAAe,GAC6B,EAAE,EAAE;IAChD,MAAM,QAAQ,GAAG,UAAU,CAAC,SAAS,EAAE,wCAAwC,CAAC,CAAC;IACnF,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IACxB,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,SAAS,EAAE,EAAE,GACd,GAAG,OAAO,CAAC;QACV,aAAa,EAAE;YACb,EAAE,EAAE,EAAE;SACP;KACF,CAAC,CAAC;IACL,oCAAoC;IAClC,MAAM,QAAQ,GAAG,iBAAiB,CAAC,eAAe,CAAC,CAAC;IAEtD,wBAAwB;IACtB,MAAM,QAAQ,GAAG,CAAC,KAAU,EAAE,EAAE;QAC9B,CAAC,KAAK,IAAG,EAAE;YACP,MAAM,WAAW,GAAG,MAAM,QAAQ,CAAC,mBAAmB,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;YACtE,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,aAAa,CAAC,CAAA;YACvC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;YACxB,oBAAoB;QACxB,CAAC,CAAC,EAAE,CAAC;QACL,IAAI,QAAQ;YAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAE,QAAQ;QACtB,8BAAM,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC;YACpC,6BAAK,SAAS,EAAC,kCAAkC;gBACjD,6CACM,SAAS,EAAC,OAAO,EACjB,WAAW,EAAC,gBAAgB,IACxB,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EACtC,CACA;YACN,gCACE,SAAS,EAAC,6BAA6B,EACvC,IAAI,EAAC,QAAQ,IAEZ,KAAK,CACC,CACJ,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,sCAAsC,CAAC,YAAY,GAAG;IACpD,KAAK,EAAE,aAAa;CACrB,CAAC;AAEF,eAAe,sCAAsC,CAAC\"}","dts":{"name":"/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/NotaryServiceDelegatable/NotaryServiceDelegatableFormIssueClaim.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface NotaryServiceDelegatableFormIssueClaimProps {\r\n    className?: string;\r\n    label: string;\r\n    onUpdate?: Function;\r\n    defaults?: any;\r\n    contractAddress: string;\r\n}\r\nexport declare const NotaryServiceDelegatableFormIssueClaim: {\r\n    ({ className, label, onUpdate, contractAddress, }: NotaryServiceDelegatableFormIssueClaimProps): JSX.Element;\r\n    defaultProps: {\r\n        label: string;\r\n    };\r\n};\r\nexport default NotaryServiceDelegatableFormIssueClaim;\r\n"}}
