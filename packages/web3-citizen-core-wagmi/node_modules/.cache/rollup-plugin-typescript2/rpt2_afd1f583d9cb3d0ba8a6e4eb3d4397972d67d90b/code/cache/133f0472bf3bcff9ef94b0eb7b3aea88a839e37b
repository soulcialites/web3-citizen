{"code":"import * as React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { useNotaryServiceDelegatableContract } from '../hooks/useNotaryServiceDelegatableContract';\r\nimport { useSigner } from 'wagmi';\r\nimport { createDelegation } from '../utils/createDelegation';\r\nimport { createIntention } from '../utils/createIntention';\r\n// @ts-ignore\r\nconst { recoverDelegationSigner } = require('eth-delegatable-utils');\r\nexport const NotaryServiceDelegatableFormClaimDelegate = ({ className, label, onUpdate, contractAddress, }) => {\r\n    const classes_ = classNames(className, 'NotaryServiceDelegatableFormClaimDelegate');\r\n    const signer = useSigner();\r\n    const { register, handleSubmit, formState: {}, } = useForm({\r\n        defaultValues: {\r\n            to: '',\r\n        },\r\n    });\r\n    //   const watchAllFields = watch();\r\n    const contract = useNotaryServiceDelegatableContract(contractAddress);\r\n    //   useLogError(error);\r\n    const [signatures, setSignatures] = React.useState();\r\n    const onSubmit = (_data) => {\r\n        (async () => {\r\n            const method = 'eth_signTypedData_v4';\r\n            const txPopulated = await contract.populateTransaction.issue(_data.to);\r\n            const me = await signer.data?.getAddress();\r\n            const delegation = createDelegation(_data.to, contractAddress);\r\n            // @ts-ignore\r\n            const signedDelegation1 = await signer.data?.provider?.send(method, [\r\n                me,\r\n                delegation.string,\r\n            ]);\r\n            const intention = createIntention(delegation.delegation, signedDelegation1, contractAddress, txPopulated.data);\r\n            // @ts-ignore\r\n            const signedDelegation2 = await signer.data?.provider.send(method, [\r\n                me,\r\n                intention.string,\r\n            ]);\r\n            setSignatures({\r\n                delegation: signedDelegation1,\r\n                invocation: signedDelegation2,\r\n            });\r\n        })();\r\n        if (onUpdate)\r\n            onUpdate(_data);\r\n    };\r\n    return (React.createElement(\"div\", { className: classes_ },\r\n        React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit) },\r\n            React.createElement(\"input\", Object.assign({ className: \"input\", placeholder: \"weboftrust.eth\" }, register('to', { required: true }))),\r\n            React.createElement(\"button\", { className: \"btn btn-default my-3 w-full\", type: \"submit\" }, label)),\r\n        signatures &&\r\n            React.createElement(\"div\", { className: 'text-sm' },\r\n                React.createElement(\"span\", { className: 'block break-all' },\r\n                    \"Delegation: \",\r\n                    React.createElement(\"br\", null),\r\n                    \" \",\r\n                    signatures.delegation),\r\n                React.createElement(\"span\", { className: 'block break-all' },\r\n                    \"Invocation: \",\r\n                    React.createElement(\"br\", null),\r\n                    \" \",\r\n                    signatures.invocation))));\r\n};\r\nNotaryServiceDelegatableFormClaimDelegate.defaultProps = {\r\n    label: 'Sign Delegation & Invocations',\r\n};\r\nexport default NotaryServiceDelegatableFormClaimDelegate;\r\n//# sourceMappingURL=NotaryServiceDelegatableFormClaimDelegate.js.map","references":["/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/react-hook-form@7.32.2_react@18.2.0/node_modules/react-hook-form/dist/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/hooks/useNotaryServiceDelegatableContract.tsx","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/wagmi@0.4.12_2pvqx3wni2imkaucnfdtyrjuiq/node_modules/wagmi/dist/wagmi.cjs.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/utils/createDelegation.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/utils/createIntention.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/eth-delegatable-utils@2.1.5/node_modules/eth-delegatable-utils/index.ts"],"map":"{\"version\":3,\"file\":\"NotaryServiceDelegatableFormClaimDelegate.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/NotaryServiceDelegatable/NotaryServiceDelegatableFormClaimDelegate.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/NotaryServiceDelegatable/NotaryServiceDelegatableFormClaimDelegate.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface NotaryServiceDelegatableFormClaimDelegateProps {\r\n    className?: string;\r\n    label: string;\r\n    onUpdate?: Function;\r\n    defaults?: any;\r\n    contractAddress: string;\r\n}\r\nexport declare const NotaryServiceDelegatableFormClaimDelegate: {\r\n    ({ className, label, onUpdate, contractAddress, }: NotaryServiceDelegatableFormClaimDelegateProps): JSX.Element;\r\n    defaultProps: {\r\n        label: string;\r\n    };\r\n};\r\nexport default NotaryServiceDelegatableFormClaimDelegate;\r\n"}}
