{"code":"import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport CitizenAlpha from '@web3-citizen/core-sol/deployments/localhost/CitizenAlpha.json';\r\nimport { IpfsUriImageBackgroundRender } from '@turbo-eth/core-wagmi';\r\nimport { Address } from '@turbo-eth/core-wagmi';\r\nimport useCitizenGetMetadata from './useCitizenGetMetadata';\r\nimport useCitizenAlphaContractRead from './useCitizenAlphaContractRead';\r\nexport const CitizenCard = ({ className, classNameImage, tokenId = '0', }) => {\r\n    const containerClassName = classNames(className, 'CitizenCard');\r\n    const { data: walletAddress } = useCitizenAlphaContractRead(CitizenAlpha.address, 'ownerOf', [tokenId]);\r\n    const metadata = useCitizenGetMetadata(CitizenAlpha.address, walletAddress || \"\", tokenId);\r\n    return (React.createElement(\"div\", { className: containerClassName },\r\n        React.createElement(IpfsUriImageBackgroundRender, { className: classNameImage, uri: metadata?.img || '' }),\r\n        ' ',\r\n        React.createElement(\"h3\", { className: \"font-normal text-xl my-3\" }, metadata?.description.length == 42 ? (React.createElement(Address, { truncate: true, address: metadata?.description })) : (metadata?.description)),\r\n        React.createElement(\"div\", { className: \"block\" },\r\n            React.createElement(\"span\", { className: \"block font-bold text-sm\" }, metadata?.name),\r\n            React.createElement(\"span\", { className: \"block font-normal text-sm\" },\r\n                \"Invited By: \",\r\n                React.createElement(Address, { truncate: true, address: metadata?.traits['link'] })))));\r\n};\r\nexport default CitizenCard;\r\n//# sourceMappingURL=CitizenCard.js.map","references":["/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/contracts/core-sol/deployments/localhost/CitizenAlpha.json","/Users/kames/workspace/soulcialites/web3-citizen/packages/core-wagmi/dist/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/core-wagmi/dist/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/lib-react/src/useCitizenGetMetadata.tsx","/Users/kames/workspace/soulcialites/web3-citizen/packages/lib-react/src/useCitizenAlphaContractRead.tsx"],"map":"{\"version\":3,\"file\":\"CitizenCard.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/CitizenCard.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,YAAY,MAAM,gEAAgE,CAAC;AAC1F,OAAO,EAAE,4BAA4B,EAAE,MAAM,uBAAuB,CAAC;AACrE,OAAO,EAAE,OAAO,EAAE,MAAM,uBAAuB,CAAC;AAChD,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAC5D,OAAO,2BAA2B,MAAM,+BAA+B,CAAC;AASxE,MAAM,CAAC,MAAM,WAAW,GAAG,CAAC,EAC1B,SAAS,EACT,cAAc,EACd,OAAO,GAAG,GAAG,GACI,EAAE,EAAE;IACrB,MAAM,kBAAkB,GAAG,UAAU,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IAChE,MAAM,EAAE,IAAI,EAAE,aAAa,EAAC,GAAE,2BAA2B,CAAC,YAAY,CAAC,OAAO,EAAE,SAAS,EAAE,CAAC,OAAO,CAAC,CAAC,CAAA;IACrG,MAAM,QAAQ,GAAG,qBAAqB,CAAC,YAAY,CAAC,OAAO,EAAE,aAAa,IAAI,EAAE,EAAE,OAAO,CAAC,CAAA;IAE1F,OAAO,CACL,6BAAK,SAAS,EAAE,kBAAkB;QAChC,oBAAC,4BAA4B,IAC3B,SAAS,EAAE,cAAc,EACzB,GAAG,EAAE,QAAQ,EAAE,GAAG,IAAI,EAAE,GACxB;QAAC,GAAG;QACN,4BAAI,SAAS,EAAC,0BAA0B,IACrC,QAAQ,EAAE,WAAW,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,CAAC,CACpC,oBAAC,OAAO,IAAC,QAAQ,QAAC,OAAO,EAAE,QAAQ,EAAE,WAAW,GAAI,CACrD,CAAC,CAAC,CAAC,CACF,QAAQ,EAAE,WAAW,CACtB,CACE;QACL,6BAAK,SAAS,EAAC,OAAO;YACpB,8BAAM,SAAS,EAAC,yBAAyB,IAAE,QAAQ,EAAE,IAAI,CAAQ;YACjE,8BAAM,SAAS,EAAC,2BAA2B;;gBAC7B,oBAAC,OAAO,IAAC,QAAQ,QAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,GAAI,CAC9D,CACH,CACF,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,WAAW,CAAC\"}","dts":{"name":"/Users/kames/workspace/soulcialites/web3-citizen/packages/lib-react/CitizenCard.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface CitizenCardProps {\r\n    className?: string;\r\n    classNameImage?: string;\r\n    walletAddress: string;\r\n    tokenId: string | number;\r\n}\r\nexport declare const CitizenCard: ({ className, classNameImage, tokenId, }: CitizenCardProps) => JSX.Element;\r\nexport default CitizenCard;\r\n"}}
