{"code":"import * as React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport classNames from 'classnames';\r\nimport { useCitizenNotaryWrite } from '../useCitizenNotaryWrite';\r\n// import InputWithLabel from '../InputWithLabel';\r\nimport { FOUNDER } from '../constants';\r\nimport { useLogError } from '../hooks';\r\nexport const NotaryFormIsFounder = ({ className, onUpdate, contractAddress, }) => {\r\n    const classes_ = classNames(className, 'NotaryFormIsFounder');\r\n    const { register, handleSubmit, watch, formState: {}, } = useForm({\r\n        defaultValues: {\r\n            citizen: '',\r\n        },\r\n    });\r\n    const watchAllFields = watch();\r\n    const { write, error, data } = useCitizenNotaryWrite(contractAddress, 'hasRole', [\r\n        FOUNDER,\r\n        watchAllFields?.citizen,\r\n    ]);\r\n    useLogError(error);\r\n    const onSubmit = (_data) => {\r\n        write();\r\n        if (onUpdate)\r\n            onUpdate(_data);\r\n    };\r\n    return (React.createElement(\"div\", { className: classes_ },\r\n        React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit) },\r\n            React.createElement(\"div\", { className: 'grid grid-cols-12 gap-x-4 w-full' },\r\n                React.createElement(\"div\", { className: \"col-span-8\" },\r\n                    React.createElement(\"input\", Object.assign({ className: 'input', placeholder: \"weboftrust.eth\" }, register('citizen', { required: true })))),\r\n                React.createElement(\"div\", { className: 'col-span-4 bg-neutral-900 flex items-center justify-center p-2' },\r\n                    React.createElement(\"span\", { className: '' },\r\n                        React.createElement(\"span\", { className: 'font-semibold' }, \"Status:\"),\r\n                        \" \",\r\n                        data ? \"Yes\" : \"No\"))),\r\n            React.createElement(\"button\", { className: \"bg-neutral-600 hover:bg-neutral-700 w-full mt-4 p-2 rounded-ms rounded-md\", type: \"submit\" }, \"Check\"))));\r\n};\r\nexport default NotaryFormIsFounder;\r\n//# sourceMappingURL=NotaryFormIsFounder.js.map","references":["/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/react-hook-form@7.32.2_react@18.2.0/node_modules/react-hook-form/dist/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/useCitizenNotaryWrite.tsx","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/constants.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/src/hooks/index.ts"],"map":"{\"version\":3,\"file\":\"NotaryFormIsFounder.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/Notary/NotaryFormIsFounder.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,qBAAqB,EAAE,MAAM,0BAA0B,CAAC;AACjE,kDAAkD;AAClD,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,WAAW,EAAE,MAAM,UAAU,CAAC;AAUvC,MAAM,CAAC,MAAM,mBAAmB,GAAG,CAAC,EAClC,SAAS,EACT,QAAQ,EACR,eAAe,GACU,EAAE,EAAE;IAC7B,MAAM,QAAQ,GAAG,UAAU,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAC;IAE9D,MAAM,EACJ,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,SAAS,EAAE,EAAE,GACd,GAAG,OAAO,CAAC;QACV,aAAa,EAAE;YACb,OAAO,EAAE,EAAE;SACZ;KACF,CAAC,CAAC;IACH,MAAM,cAAc,GAAG,KAAK,EAAE,CAAC;IAC/B,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,qBAAqB,CAAC,eAAe,EAAE,SAAS,EAAE;QAC/E,OAAO;QACP,cAAc,EAAE,OAAO;KACxB,CAAC,CAAC;IACH,WAAW,CAAC,KAAK,CAAC,CAAA;IAClB,MAAM,QAAQ,GAAG,CAAC,KAAU,EAAE,EAAE;QAC9B,KAAK,EAAE,CAAC;QACR,IAAI,QAAQ;YAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,CACL,6BAAK,SAAS,EAAE,QAAQ;QACtB,8BAAM,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC;YACpC,6BAAK,SAAS,EAAC,kCAAkC;gBAC7C,6BAAK,SAAS,EAAC,YAAY;oBACzB,6CACA,SAAS,EAAC,OAAO,EACf,WAAW,EAAC,gBAAgB,IACxB,QAAQ,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,EAC3C,CACE;gBACN,6BAAK,SAAS,EAAC,gEAAgE;oBAC3E,8BAAM,SAAS,EAAC,EAAE;wBAAC,8BAAM,SAAS,EAAC,eAAe,cAAe;;wBAAE,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAQ,CAC5F,CACJ;YACN,gCAAQ,SAAS,EAAC,2EAA2E,EAAC,IAAI,EAAC,QAAQ,YAElG,CACJ,CACH,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,mBAAmB,CAAC\"}","dts":{"name":"/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/Notary/NotaryFormIsFounder.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface NotaryFormIsFounderProps {\r\n    className?: string;\r\n    onUpdate?: Function;\r\n    defaults?: any;\r\n    contractAddress: string;\r\n}\r\nexport declare const NotaryFormIsFounder: ({ className, onUpdate, contractAddress, }: NotaryFormIsFounderProps) => JSX.Element;\r\nexport default NotaryFormIsFounder;\r\n"}}
