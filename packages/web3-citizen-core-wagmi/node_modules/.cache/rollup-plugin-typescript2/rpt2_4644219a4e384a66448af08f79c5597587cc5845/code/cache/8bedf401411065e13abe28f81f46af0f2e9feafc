{"code":"import { useContractRead, useProvider } from 'wagmi';\r\nimport CitizenAlpha from '@web3-citizen/core-sol/abis/contracts/CitizenAlpha.sol/CitizenAlpha.json';\r\nimport { useEffect, useState } from 'react';\r\nimport { parseAvatarString } from '@turbo-eth/ens-wagmi';\r\nexport function useCitizenGetMetadata(address, walletAddress, tokenId) {\r\n    const provider = useProvider();\r\n    const { data } = useContractRead({\r\n        addressOrName: address,\r\n        contractInterface: CitizenAlpha,\r\n    }, 'tokenURI', {\r\n        args: [tokenId],\r\n    });\r\n    const [citizenData, setCitizenData] = useState();\r\n    useEffect(() => {\r\n        if (data) {\r\n            (async () => {\r\n                const json = Buffer.from(data.substring(29), 'base64').toString();\r\n                const result = JSON.parse(json);\r\n                console.log('result', result);\r\n                if (result.image) {\r\n                    result.img = await parseAvatarString(walletAddress, result.image, provider);\r\n                }\r\n                result.traits = {};\r\n                result.attributes.forEach((element) => {\r\n                    result.traits = {\r\n                        ...result.traits,\r\n                        [element.trait_type]: element.value,\r\n                    };\r\n                });\r\n                setCitizenData(result);\r\n            })();\r\n        }\r\n    }, [data]);\r\n    return citizenData;\r\n}\r\nexport default useCitizenGetMetadata;\r\n//# sourceMappingURL=useCitizenGetMetadata.js.map","references":["/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/wagmi@0.4.12_2pvqx3wni2imkaucnfdtyrjuiq/node_modules/wagmi/dist/wagmi.cjs.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/contracts/core-sol/abis/contracts/CitizenAlpha.sol/CitizenAlpha.json","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/packages/ens-wagmi/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"useCitizenGetMetadata.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/useCitizenGetMetadata.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,eAAe,EAAE,WAAW,EAAE,MAAM,OAAO,CAAC;AACrD,OAAO,YAAY,MAAM,0EAA0E,CAAC;AACpG,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAC;AAC5C,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAEzD,MAAM,UAAU,qBAAqB,CACnC,OAAe,EACf,aAAqB,EACrB,OAAwB;IAExB,MAAM,QAAQ,GAAG,WAAW,EAAE,CAAC;IAC/B,MAAM,EAAE,IAAI,EAAE,GAAG,eAAe,CAC9B;QACE,aAAa,EAAE,OAAO;QACtB,iBAAiB,EAAE,YAAY;KAChC,EACD,UAAU,EACV;QACE,IAAI,EAAE,CAAC,OAAO,CAAC;KAChB,CACF,CAAC;IAEF,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,QAAQ,EAU1C,CAAC;IAEL,SAAS,CAAC,GAAG,EAAE;QACb,IAAI,IAAI,EAAE;YACR,CAAC,KAAK,IAAI,EAAE;gBACV,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,QAAQ,EAAE,CAAC;gBAClE,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;gBAC9B,IAAI,MAAM,CAAC,KAAK,EAAE;oBAChB,MAAM,CAAC,GAAG,GAAG,MAAM,iBAAiB,CAClC,aAAa,EACb,MAAM,CAAC,KAAK,EACZ,QAAQ,CACT,CAAC;iBACH;gBACD,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;gBACnB,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,OAAY,EAAE,EAAE;oBACzC,MAAM,CAAC,MAAM,GAAG;wBACd,GAAG,MAAM,CAAC,MAAM;wBAChB,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,OAAO,CAAC,KAAK;qBACpC,CAAC;gBACJ,CAAC,CAAC,CAAC;gBACH,cAAc,CAAC,MAAM,CAAC,CAAC;YACzB,CAAC,CAAC,EAAE,CAAC;SACN;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAEX,OAAO,WAAW,CAAC;AACrB,CAAC;AAED,eAAe,qBAAqB,CAAC\"}","dts":{"name":"/Users/kames/workspace/soulcialites/web3-citizen/packages/web3-citizen-core-wagmi/useCitizenGetMetadata.d.ts","writeByteOrderMark":false,"text":"export declare function useCitizenGetMetadata(address: string, walletAddress: string, tokenId: string | number): any;\r\nexport default useCitizenGetMetadata;\r\n"}}
