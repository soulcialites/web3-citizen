{"code":"import axios from 'axios';\r\nimport { Buffer } from 'buffer/';\r\nimport * as multiformats from 'multiformats';\r\nimport createDOMPurify from 'dompurify';\r\nimport isSVG from 'is-svg';\r\nimport { urlJoin } from 'url-join-ts';\r\nconst IPFS_SUBPATH = '/ipfs/';\r\nconst IPNS_SUBPATH = '/ipns/';\r\nconst ipfsRegex = /(?<protocol>ipfs:\\/|ipns:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?/;\r\nconst base64Regex = /^data:([a-zA-Z\\-/+]*);base64,([^\"].*)/;\r\nconst dataURIRegex = /^data:([a-zA-Z\\-/+]*)?(;[a-zA-Z0-9].*)?(,)/;\r\nexport function isCID(hash) {\r\n    // check if given string or object is a valid IPFS CID\r\n    try {\r\n        if (typeof hash === 'string') {\r\n            return Boolean(multiformats.CID.parse(hash));\r\n        }\r\n        return Boolean(multiformats.CID.asCID(hash));\r\n    }\r\n    catch (_error) {\r\n        return false;\r\n    }\r\n}\r\n// simple assert without nested check\r\nexport function assert(condition, message) {\r\n    if (!condition) {\r\n        throw message;\r\n    }\r\n}\r\nexport class BaseError extends Error {\r\n    constructor(message) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\nexport class NFTURIParsingError extends BaseError {\r\n}\r\nexport function parseNFT(uri, seperator = '/') {\r\n    // parse valid nft spec (CAIP-22/CAIP-29)\r\n    // @see: https://github.com/ChainAgnostic/CAIPs/tree/master/CAIPs\r\n    try {\r\n        assert(uri, 'parameter URI cannot be empty');\r\n        if (uri.startsWith('did:nft:')) {\r\n            // convert DID to CAIP\r\n            uri = uri.replace('did:nft:', '').replace(/_/g, '/');\r\n        }\r\n        const [reference, asset_namespace, tokenID] = uri.split(seperator);\r\n        const [eip_namespace, chainID] = reference.split(':');\r\n        const [erc_namespace, contractAddress] = asset_namespace.split(':');\r\n        assert(eip_namespace && eip_namespace.toLowerCase() === 'eip155', 'Only EIP-155 is supported');\r\n        assert(chainID, 'chainID not found');\r\n        assert(contractAddress, 'contractAddress not found');\r\n        assert(erc_namespace, 'erc namespace not found');\r\n        assert(tokenID, 'tokenID not found');\r\n        return {\r\n            chainID: Number(chainID),\r\n            namespace: erc_namespace.toLowerCase(),\r\n            contractAddress,\r\n            tokenID,\r\n        };\r\n    }\r\n    catch (error) {\r\n        throw new NFTURIParsingError(`${error} - ${uri}`);\r\n    }\r\n}\r\nexport function resolveURI(uri, customGateway) {\r\n    // resolves uri based on its' protocol\r\n    const isEncoded = base64Regex.test(uri);\r\n    if (isEncoded || uri.startsWith('http')) {\r\n        return { uri, isOnChain: isEncoded, isEncoded };\r\n    }\r\n    const ipfsGateway = customGateway || 'https://ipfs.io';\r\n    const ipfsRegexpResult = uri.match(ipfsRegex);\r\n    const { protocol, subpath, target, subtarget = '', } = ipfsRegexpResult?.groups || {};\r\n    if ((protocol === 'ipns:/' || subpath === 'ipns/') && target) {\r\n        return {\r\n            uri: urlJoin(ipfsGateway, IPNS_SUBPATH, target, subtarget),\r\n            isOnChain: false,\r\n            isEncoded: false,\r\n        };\r\n    }\r\n    else if (isCID(target)) {\r\n        // Assume that it's a regular IPFS CID and not an IPNS key\r\n        return {\r\n            uri: urlJoin(ipfsGateway, IPFS_SUBPATH, target, subtarget),\r\n            isOnChain: false,\r\n            isEncoded: false,\r\n        };\r\n    }\r\n    else {\r\n        // we may want to throw error here\r\n        return {\r\n            uri: uri.replace(dataURIRegex, ''),\r\n            isOnChain: true,\r\n            isEncoded: false,\r\n        };\r\n    }\r\n}\r\nfunction _sanitize(data, jsDomWindow) {\r\n    let domWindow;\r\n    try {\r\n        domWindow = window;\r\n    }\r\n    catch {\r\n        // if js process run under nodejs require jsdom window\r\n        if (!jsDomWindow) {\r\n            throw Error('In node environment JSDOM window is required');\r\n        }\r\n        domWindow = jsDomWindow;\r\n    }\r\n    const DOMPurify = createDOMPurify(domWindow);\r\n    // purges malicious scripting from svg content\r\n    const cleanDOM = DOMPurify.sanitize(data);\r\n    return Buffer.from(cleanDOM);\r\n}\r\nexport function getImageURI({ metadata, customGateway, jsdomWindow, }) {\r\n    // retrieves image uri from metadata, if image is onchain then convert to base64\r\n    const { image, image_url, image_data } = metadata;\r\n    const _image = image || image_url || image_data;\r\n    assert(_image, 'Image is not available');\r\n    const { uri: parsedURI } = resolveURI(_image || '', customGateway);\r\n    if (parsedURI.startsWith('data:') || parsedURI.startsWith('http')) {\r\n        return parsedURI;\r\n    }\r\n    if (isSVG(parsedURI)) {\r\n        // svg - image_data\r\n        const data = _sanitize(parsedURI, jsdomWindow);\r\n        return `data:image/svg+xml;base64,${data.toString('base64')}`;\r\n    }\r\n    return null;\r\n}\r\nexport function createCacheAdapter(fetch, ttl) {\r\n    // creates cache adapter for axios\r\n    const { setupCache } = require('axios-cache-interceptor');\r\n    setupCache(fetch, {\r\n        ttl: ttl * 1000,\r\n    });\r\n}\r\nfunction createFetcher({ ttl }) {\r\n    const _fetch = axios.create();\r\n    if (ttl && ttl > 0) {\r\n        createCacheAdapter(_fetch, ttl);\r\n    }\r\n    return _fetch;\r\n}\r\nexport const fetch = createFetcher({});\r\n//# sourceMappingURL=utils.js.map","references":["/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/axios@0.27.2/node_modules/axios/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/multiformats@9.7.0/node_modules/multiformats/types/src/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/@types+dompurify@2.3.3/node_modules/@types/dompurify/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/is-svg@4.3.2/node_modules/is-svg/index.d.ts","/Users/kames/workspace/soulcialites/web3-citizen/node_modules/.pnpm/url-join-ts@1.0.5/node_modules/url-join-ts/lib/index.d.ts"],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/utils.ts\"],\"names\":[],\"mappings\":\"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\"}"}
