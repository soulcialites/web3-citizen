{"code":"import * as React from 'react';\r\nimport classNames from 'classnames';\r\nimport { utils } from 'ethers';\r\nimport useERC20ContractRead from './useERC20ContractRead';\r\nexport const ERC20Balance = ({ className, account, token, }) => {\r\n    const classes = classNames(className, 'ERC20Balance');\r\n    const { data, isError, isLoading } = useERC20ContractRead(token, 'balanceOf', [\r\n        account,\r\n    ]);\r\n    console.log(data);\r\n    if (isError || isLoading)\r\n        return null;\r\n    return React.createElement(\"div\", { className: classes }, utils.formatEther(data || '0'));\r\n};\r\nexport default ERC20Balance;\r\n//# sourceMappingURL=ERC20Balance.js.map","references":["/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/ethers@5.6.9/node_modules/ethers/lib/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/packages/erc20-wagmi/src/useERC20ContractRead.tsx"],"map":"{\"version\":3,\"file\":\"ERC20Balance.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/ERC20Balance.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,OAAO,oBAAoB,MAAM,wBAAwB,CAAC;AAQ1D,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,EAC3B,SAAS,EACT,OAAO,EACP,KAAK,GACa,EAAE,EAAE;IACtB,MAAM,OAAO,GAAG,UAAU,CAAC,SAAS,EAAE,cAAc,CAAC,CAAC;IAEtD,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,oBAAoB,CAAC,KAAK,EAAE,WAAW,EAAE;QAC5E,OAAO;KACR,CAAC,CAAC;IAEH,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAElB,IAAI,OAAO,IAAI,SAAS;QAAE,OAAO,IAAI,CAAC;IACtC,OAAO,6BAAK,SAAS,EAAE,OAAO,IAAG,KAAK,CAAC,WAAW,CAAC,IAAI,IAAI,GAAG,CAAC,CAAO,CAAC;AACzE,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC\"}","dts":{"name":"/Users/kames/workspace/kames/code/turbo-eth/packages/erc20-wagmi/ERC20Balance.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface ERC20BalanceProps {\r\n    className?: string;\r\n    account?: string;\r\n    token: string;\r\n}\r\nexport declare const ERC20Balance: ({ className, account, token, }: ERC20BalanceProps) => JSX.Element | null;\r\nexport default ERC20Balance;\r\n"}}
