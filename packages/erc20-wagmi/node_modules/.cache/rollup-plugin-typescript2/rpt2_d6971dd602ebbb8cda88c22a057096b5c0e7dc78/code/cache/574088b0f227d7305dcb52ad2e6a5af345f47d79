{"code":"import { utils } from 'ethers';\r\nimport * as React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classNames from \"classnames\";\r\nimport useERC20ContractWrite from './useERC20ContractWrite';\r\nimport InputWithLabel from './InputWithLabel';\r\nexport const ERC20Transfer = ({ className, onUpdate, token }) => {\r\n    const styleForm = classNames(className, \"ERC20Transfer\");\r\n    const { register, handleSubmit, watch, formState: {}, } = useForm({\r\n        defaultValues: {\r\n            to: '',\r\n            amount: '',\r\n        },\r\n    });\r\n    const watchAllFields = watch();\r\n    const { write } = useERC20ContractWrite(token, \"transfer\", [watchAllFields?.to, utils.parseEther(watchAllFields.amount || '0')]);\r\n    const onSubmit = (_data) => {\r\n        write();\r\n        if (onUpdate)\r\n            onUpdate(_data);\r\n    };\r\n    return (React.createElement(\"div\", { className: styleForm },\r\n        React.createElement(\"form\", { onSubmit: handleSubmit(onSubmit) },\r\n            React.createElement(\"div\", { className: \"mt-4\" },\r\n                React.createElement(InputWithLabel, { name: \"to\", label: \"To\", placeholder: \"0x000...000\", register: register }),\r\n                React.createElement(InputWithLabel, { className: 'mt-3', name: \"amount\", label: \"Amount\", placeholder: \"0.1\", register: register })),\r\n            React.createElement(\"button\", { className: \"button text-white py-2 rounded-lg text-lg px-14 bg-gradient-to-br from-emerald-500 via-emerald-500 to-emerald-700 w-full mt-6\", type: \"submit\" }, \"Submit\"))));\r\n};\r\nexport default ERC20Transfer;\r\n//# sourceMappingURL=ERC20Transfer.js.map","references":["/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/ethers@5.6.9/node_modules/ethers/lib/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/@types+react@18.0.14/node_modules/@types/react/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/react-hook-form@7.32.2_react@18.2.0/node_modules/react-hook-form/dist/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/node_modules/.pnpm/classnames@2.3.1/node_modules/classnames/index.d.ts","/Users/kames/workspace/kames/code/turbo-eth/packages/erc20-wagmi/src/useERC20ContractWrite.tsx","/Users/kames/workspace/kames/code/turbo-eth/packages/erc20-wagmi/src/InputWithLabel.tsx"],"map":"{\"version\":3,\"file\":\"ERC20Transfer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/ERC20Transfer.tsx\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,KAAK,EAAE,MAAM,QAAQ,CAAC;AAC/B,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAC;AAC1C,OAAO,UAAU,MAAM,YAAY,CAAC;AACpC,OAAO,qBAAqB,MAAM,yBAAyB,CAAC;AAC5D,OAAO,cAAc,MAAM,kBAAkB,CAAC;AAU9C,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,EAC5B,SAAS,EACT,QAAQ,EACR,KAAK,EACc,EAAE,EAAE;IACvB,MAAM,SAAS,GAAG,UAAU,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;IAEzD,MAAM,EACF,QAAQ,EACR,YAAY,EACZ,KAAK,EACL,SAAS,EAAE,EAAI,GAChB,GAAG,OAAO,CAAC;QACR,aAAa,EAAE;YACX,EAAE,EAAE,EAAE;YACN,MAAM,EAAE,EAAE;SACb;KACJ,CAAC,CAAC;IACH,MAAM,cAAc,GAAG,KAAK,EAAE,CAAC;IAC/B,MAAM,EAAE,KAAK,EAAE,GAAG,qBAAqB,CAAC,KAAK,EAAE,UAAU,EAAE,CAAC,cAAc,EAAE,EAAE,EAAE,KAAK,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;IACjI,MAAM,QAAQ,GAAG,CAAC,KAAU,EAAE,EAAE;QAC5B,KAAK,EAAE,CAAC;QACR,IAAG,QAAQ;YAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC,CAAC;IAGJ,OAAO,CACL,6BAAK,SAAS,EAAE,SAAS;QACvB,8BAAM,QAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC;YACpC,6BAAK,SAAS,EAAC,MAAM;gBACnB,oBAAC,cAAc,IACb,IAAI,EAAC,IAAI,EACT,KAAK,EAAC,IAAI,EACV,WAAW,EAAC,aAAa,EACzB,QAAQ,EAAE,QAAQ,GAClB;gBACF,oBAAC,cAAc,IACf,SAAS,EAAC,MAAM,EACd,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,QAAQ,EACd,WAAW,EAAC,KAAK,EACjB,QAAQ,EAAE,QAAQ,GAClB,CACE;YACN,gCACE,SAAS,EAAC,+HAA+H,EACzI,IAAI,EAAC,QAAQ,aAGN,CACI,CACX,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,aAAa,CAAC\"}","dts":{"name":"/Users/kames/workspace/kames/code/turbo-eth/packages/erc20-wagmi/ERC20Transfer.d.ts","writeByteOrderMark":false,"text":"/// <reference types=\"react\" />\r\ninterface ERC20TransferProps {\r\n    className?: string;\r\n    onUpdate?: Function;\r\n    defaults?: any;\r\n    token: string;\r\n    symbol?: string;\r\n}\r\nexport declare const ERC20Transfer: ({ className, onUpdate, token }: ERC20TransferProps) => JSX.Element;\r\nexport default ERC20Transfer;\r\n"}}
