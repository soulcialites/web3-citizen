{"code":"// Captures 0x + 4 characters, then the last 4 characters.\r\nconst truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\r\n/**\r\n * Truncates an ethereum address to the format 0x0000…0000\r\n * @param address Full address to truncate\r\n * @returns Truncated address\r\n */\r\nconst truncateAddress = (address) => {\r\n    const match = address.match(truncateRegex);\r\n    if (!match)\r\n        return address;\r\n    return `${match[1]}…${match[2]}`;\r\n};\r\nexport default truncateAddress;\r\n//# sourceMappingURL=truncateAddress.js.map","references":[],"map":"{\"version\":3,\"file\":\"truncateAddress.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/truncateAddress.ts\"],\"names\":[],\"mappings\":\"AAAA,0DAA0D;AAC1D,MAAM,aAAa,GAAG,kDAAkD,CAAC;AAEzE;;;;GAIG;AACH,MAAM,eAAe,GAAG,CAAC,OAAe,EAAE,EAAE;IAC1C,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;IAC3C,IAAI,CAAC,KAAK;QAAE,OAAO,OAAO,CAAC;IAC3B,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;AACnC,CAAC,CAAC;AAEF,eAAe,eAAe,CAAC\"}"}
