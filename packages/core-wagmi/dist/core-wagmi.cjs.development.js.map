{"version":3,"file":"core-wagmi.cjs.development.js","sources":["../src/utils/truncateAddress.ts","../src/Address.tsx","../src/Balance.tsx","../src/BlockNumber.tsx","../src/EnsName.tsx","../src/EnsAddress.tsx","../src/IsWalletConnected.tsx","../src/WalletAddress.tsx","../src/WalletBalance.tsx","../src/WalletEnsAddress.tsx","../src/WalletEnsName.tsx","../src/WalletNonce.tsx","../src/IpfsUriImageRender.tsx","../src/IpfsUriImageBackgroundRender.tsx"],"sourcesContent":["// Captures 0x + 4 characters, then the last 4 characters.\nconst truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\n\n/**\n * Truncates an ethereum address to the format 0x0000…0000\n * @param address Full address to truncate\n * @returns Truncated address\n */\nconst truncateAddress = (address: string) => {\n  const match = address.match(truncateRegex);\n  if (!match) return address;\n  return `${match[1]}…${match[2]}`;\n};\n\nexport default truncateAddress;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport truncateAddress from './utils/truncateAddress';\n\ninterface AddressProps {\n  className?: string;\n  address?: string;\n  truncate?: boolean;\n  length?: number;\n}\n\nexport const Address = ({\n  className,\n  truncate,\n  address = '0x00',\n}: AddressProps) => {\n  const classes = classNames(className, 'Address');\n\n  if (truncate) {\n    return <span className={classes}>{truncateAddress(address)}</span>;\n  }\n\n  return <span className={classes}>{address}</span>;\n};\n\nexport default Address;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useBalance } from 'wagmi';\n\ninterface BalanceProps {\n  className?: string;\n  address?: string;\n}\n\nexport const Balance = ({ className, address }: BalanceProps) => {\n  const classes = classNames(className, 'Balance');\n  const {\n    data: dataBalance,\n    isLoading,\n    isError,\n  } = useBalance({\n    addressOrName: address,\n  });\n\n  if (isLoading || isError) return null;\n  return (\n    <div className={classes}>\n      {dataBalance?.formatted} {dataBalance?.symbol}\n    </div>\n  );\n};\n\nexport default Balance;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useBlockNumber } from 'wagmi';\n\ninterface BlockNumberProps {\n  className?: string;\n}\n\nexport const BlockNumber = ({ className }: BlockNumberProps) => {\n  const classes = classNames(className, 'BlockNumber');\n  const { data, isError, isLoading } = useBlockNumber();\n\n  if (isLoading || isError) return null;\n  return <div className={classes}>{data}</div>;\n};\n\nexport default BlockNumber;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useEnsName } from 'wagmi';\nimport Address from './Address';\n\ninterface EnsNameProps {\n  className?: string;\n  address?: string;\n}\n\nexport const EnsName = ({ className, address }: EnsNameProps) => {\n  const classes = classNames(className, 'EnsName');\n  const { data, error, isError, isLoading } = useEnsName({\n    address: address,\n  });\n\n  console.log(data, error, isLoading, isError);\n\n  if (isLoading) return null;\n  if (isError || !isLoading)\n    return <Address truncate address={address} className={classes} />;\n  return <div className={classes}>{data}</div>;\n};\n\nexport default EnsName;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useEnsAddress } from 'wagmi';\n\ninterface EnsAddressProps {\n  className?: string;\n  name?: string;\n}\n\nexport const EnsAddress = ({ className, name }: EnsAddressProps) => {\n  const classes = classNames(className, 'EnsAddress');\n  const { data, isError, isLoading } = useEnsAddress({\n    name: name,\n  });\n\n  if (isLoading || isError) return null;\n  return <div className={classes}>{data}</div>;\n};\n\nexport default EnsAddress;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useConnect } from 'wagmi';\n\ninterface IsWalletConnectedProps {\n  children: React.ReactNode;\n  loading: React.ReactNode;\n  enableButton: boolean;\n}\n\nexport const IsWalletConnected = ({\n  children,\n  loading,\n}: IsWalletConnectedProps) => {\n  const { isConnected } = useConnect();\n  if (!isConnected) return loading;\n  return children;\n};\n\nIsWalletConnected.defaultProps = {\n  loading: null,\n};\n\nIsWalletConnected.propTypes = {\n  loading: PropTypes.func,\n};\n\nexport default IsWalletConnected;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useAccount } from 'wagmi';\n\ninterface WalletAddressProps {\n  className?: string;\n}\n\nexport const WalletAddress = ({ className }: WalletAddressProps) => {\n  const classes = classNames(className, 'WalletAddress');\n  const { data, isError, isLoading } = useAccount();\n\n  if (isLoading || isError) return null;\n  return <div className={classes}>{data?.address}</div>;\n};\n\nexport default WalletAddress;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useAccount, useBalance } from 'wagmi';\n\ninterface WalletBalanceProps {\n  className?: string;\n}\n\nexport const WalletBalance = ({ className }: WalletBalanceProps) => {\n  const classes = classNames(className, 'WalletBalance');\n  const { data, isError, isLoading } = useAccount();\n  const { data: dataBalance } = useBalance({\n    addressOrName: data?.address,\n  });\n\n  if (isLoading || isError) return null;\n  return (\n    <div className={classes}>\n      {dataBalance?.formatted} {dataBalance?.symbol}\n    </div>\n  );\n};\n\nexport default WalletBalance;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useAccount, useEnsName } from 'wagmi';\n\ninterface WalletEnsAddressProps {\n  className?: string;\n}\n\nexport const WalletEnsAddress = ({ className }: WalletEnsAddressProps) => {\n  const classes = classNames(className, 'WalletEnsAddress');\n  const { data, isError, isLoading } = useAccount();\n  const { data: dataEnsAddress } = useEnsName({\n    address: data?.address,\n  });\n\n  if (isLoading || isError) return null;\n  return <div className={classes}>{dataEnsAddress}</div>;\n};\n\nexport default WalletEnsAddress;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useAccount, useEnsName } from 'wagmi';\n\ninterface WalletEnsNameProps {\n  className?: string;\n}\n\nexport const WalletEnsName = ({ className }: WalletEnsNameProps) => {\n  const classes = classNames(className, 'WalletEnsName');\n  const { data, isError, isLoading } = useAccount();\n  const { data: dataEnsName } = useEnsName({\n    address: data?.address,\n  });\n\n  if (isLoading || isError) return null;\n  return <div className={classes}>{dataEnsName}</div>;\n};\n\nexport default WalletEnsName;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { useSigner } from 'wagmi';\n\ninterface WalletNonceProps {\n  className?: string;\n}\n\nexport const WalletNonce = ({ className }: WalletNonceProps) => {\n  const classes = classNames(className, 'WalletNonce');\n  const { data: signer, isLoading, isError } = useSigner();\n  const [nonce, setNonce] = React.useState<number>();\n  React.useEffect(() => {\n    (async () => {\n      if (signer) {\n        const nonce = await signer.getTransactionCount();\n        setNonce(nonce);\n      }\n    })();\n  }, [isLoading, signer]);\n\n  if (isLoading || isError) return null;\n  return <div className={classes}>{nonce}</div>;\n};\n\nexport default WalletNonce;\n","//@ts-nocheck\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { toLink, toURL } from 'to-ipfs-url';\n\ninterface IpfsUriImageRenderProps {\n  className?: string;\n  uri: string;\n  alt?: string;\n}\n\nexport const IpfsUriImageRender = ({\n  className,\n  uri,\n  alt = '',\n}: IpfsUriImageRenderProps) => {\n  const classes = classNames(className, 'IpfsUriImageRender');\n\n  const [imgSrc, setImageSrc] = React.useState<any>('');\n  React.useEffect(() => {\n    if (uri) {\n      setImageSrc(uri.replace('ipfs://', 'https://ipfs.io/ipfs/'));\n    }\n  }, [uri]);\n  return (\n    // eslint-disable-next-line @next/next/no-img-element\n    <img className={classes} src={imgSrc} alt={alt} />\n  );\n};\n\nexport default IpfsUriImageRender;\n","/* eslint-disable @next/next/no-img-element */\n//@ts-nocheck\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { toLink, toURL } from 'to-ipfs-url';\n\ninterface IpfsUriImageBackgroundRenderProps {\n  className?: string;\n  uri: string;\n  alt?: string;\n}\n\nexport const IpfsUriImageBackgroundRender = ({\n  className,\n  uri,\n  alt = '',\n}: IpfsUriImageBackgroundRenderProps) => {\n  const classes = classNames(className, 'IpfsUriImageBackgroundRender');\n\n  const [imgSrc, setImageSrc] = React.useState<any>('');\n  React.useEffect(() => {\n    if (uri) {\n      setImageSrc(uri.replace('ipfs://', 'https://ipfs.io/ipfs/'));\n    }\n  }, [uri]);\n  return (\n    <div className={classes} style={{ position: 'relative' }}>\n      <div\n        style={{\n          backgroundImage: `url(${imgSrc})`,\n          backgroundPosition: 'center center',\n          backgroundSize: 'cover',\n          position: 'absolute',\n          top: 0,\n          bottom: 0,\n          width: '100%',\n        }}\n      />\n    </div>\n  );\n};\n\nexport default IpfsUriImageBackgroundRender;\n"],"names":["truncateRegex","truncateAddress","address","match","Address","className","truncate","classes","classNames","React","Balance","useBalance","addressOrName","dataBalance","data","isLoading","isError","formatted","symbol","BlockNumber","useBlockNumber","EnsName","useEnsName","error","console","log","EnsAddress","name","useEnsAddress","IsWalletConnected","children","loading","useConnect","isConnected","defaultProps","propTypes","PropTypes","func","WalletAddress","useAccount","WalletBalance","WalletEnsAddress","dataEnsAddress","WalletEnsName","dataEnsName","WalletNonce","useSigner","signer","nonce","setNonce","getTransactionCount","IpfsUriImageRender","uri","alt","imgSrc","setImageSrc","replace","src","IpfsUriImageBackgroundRender","style","position","backgroundImage","backgroundPosition","backgroundSize","top","bottom","width"],"mappings":"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"}